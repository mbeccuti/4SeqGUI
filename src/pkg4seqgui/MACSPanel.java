/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;
import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import java.util.Timer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static pkg4seqgui.VmRNA.vOrganismText;
import static pkg4seqgui.VmRNA.vThreadText;
/**
 *
 * @author user
 */
public class MACSPanel extends javax.swing.JPanel {

    /**
     * Creates new form MACSPanel
     */
    public MACSPanel() {
        initComponents();
    }
    private static final long serialVersionUID = 57744123321L;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        MRemoveDuplicates = new javax.swing.ButtonGroup();
        MExecution = new javax.swing.ButtonGroup();
        MACSPanel = new javax.swing.JPanel();
        vCloseButton4 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        MOutputFolderText = new javax.swing.JTextField();
        jToggleButton20 = new javax.swing.JToggleButton();
        jToggleButton21 = new javax.swing.JToggleButton();
        jLabel54 = new javax.swing.JLabel();
        MScratchFolderText = new javax.swing.JTextField();
        jToggleButton22 = new javax.swing.JToggleButton();
        jToggleButton23 = new javax.swing.JToggleButton();
        jLabel55 = new javax.swing.JLabel();
        MMockFolderText = new javax.swing.JTextField();
        jToggleButton24 = new javax.swing.JToggleButton();
        jToggleButton25 = new javax.swing.JToggleButton();
        MGenomeFolderText = new javax.swing.JTextField();
        jToggleButton26 = new javax.swing.JToggleButton();
        jToggleButton27 = new javax.swing.JToggleButton();
        jLabel60 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        MTestFolderText = new javax.swing.JTextField();
        jToggleButton28 = new javax.swing.JToggleButton();
        jToggleButton29 = new javax.swing.JToggleButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        MSudoRadioButton = new javax.swing.JRadioButton();
        MDockerRadioButton = new javax.swing.JRadioButton();
        jLabel57 = new javax.swing.JLabel();
        MThreadText = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        MToolComboBox = new javax.swing.JComboBox<>();
        Tool = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel78 = new javax.swing.JLabel();
        MMaxmfoldText = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        MMinmfoldText = new javax.swing.JTextField();
        MMpvalueText = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        MSgsizeText = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        MSWindowsText = new javax.swing.JTextField();
        MSFDRText = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        MAdapter5Text = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        MAdapter3Text = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        MTTSText = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        MRyesRadioButton = new javax.swing.JRadioButton();
        MRnoRadioButton = new javax.swing.JRadioButton();
        jLabel74 = new javax.swing.JLabel();
        MOrgComboBox = new javax.swing.JComboBox<>();
        MMinLengthText = new javax.swing.JTextField();
        MMaxUpstreamText = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        MReadLengthTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        MACSPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "MACS & SICER analysis", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(51, 153, 0))); // NOI18N
        MACSPanel.setToolTipText("");
        MACSPanel.setLayout(new java.awt.GridBagLayout());

        vCloseButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        vCloseButton4.setText("Close");
        vCloseButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vCloseButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        MACSPanel.add(vCloseButton4, gridBagConstraints);

        jButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        jButton23.setText("Execute");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        MACSPanel.add(jButton23, gridBagConstraints);

        jButton24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        jButton24.setText("Reset");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        MACSPanel.add(jButton24, gridBagConstraints);

        jButton25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/86b.png"))); // NOI18N
        jButton25.setText("Save conf.");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        MACSPanel.add(jButton25, gridBagConstraints);

        jPanel17.setBackground(new java.awt.Color(247, 248, 248));
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel53.setText("Output  folder:");
        jLabel53.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jLabel53, gridBagConstraints);

        MOutputFolderText.setEditable(false);
        MOutputFolderText.setToolTipText("The ouput folder, where the data will be saved.");
        MOutputFolderText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MOutputFolderTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 10, 10);
        jPanel17.add(MOutputFolderText, gridBagConstraints);

        jToggleButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton20.setText("Browse");
        jToggleButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton20, gridBagConstraints);

        jToggleButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton21.setText("Cancel");
        jToggleButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton21, gridBagConstraints);

        jLabel54.setText("Scratch folder:");
        jLabel54.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jLabel54, gridBagConstraints);

        MScratchFolderText.setEditable(false);
        MScratchFolderText.setToolTipText("This folder will be mounted in the docker container.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 10, 10);
        jPanel17.add(MScratchFolderText, gridBagConstraints);

        jToggleButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton22.setText("Browse");
        jToggleButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton22, gridBagConstraints);

        jToggleButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton23.setText("Cancel");
        jToggleButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton23ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton23, gridBagConstraints);

        jLabel55.setText("Mock folder:");
        jLabel55.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jLabel55, gridBagConstraints);

        MMockFolderText.setEditable(false);
        MMockFolderText.setToolTipText("The folder containing the indexed genome.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 10, 10);
        jPanel17.add(MMockFolderText, gridBagConstraints);

        jToggleButton24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton24.setText("Browse");
        jToggleButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton24, gridBagConstraints);

        jToggleButton25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton25.setText("Cancel");
        jToggleButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton25ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton25, gridBagConstraints);

        MGenomeFolderText.setEditable(false);
        MGenomeFolderText.setToolTipText("The folder containing the indexed genome.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 10, 10);
        jPanel17.add(MGenomeFolderText, gridBagConstraints);

        jToggleButton26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton26.setText("Browse");
        jToggleButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton26ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton26, gridBagConstraints);

        jToggleButton27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton27.setText("Cancel");
        jToggleButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton27ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton27, gridBagConstraints);

        jLabel60.setText("Genome folder:");
        jLabel60.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jLabel60, gridBagConstraints);

        jLabel67.setText("Test  folder:");
        jLabel67.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jLabel67, gridBagConstraints);

        MTestFolderText.setEditable(false);
        MTestFolderText.setToolTipText("The folder containing the indexed genome.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 10, 10);
        jPanel17.add(MTestFolderText, gridBagConstraints);

        jToggleButton28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton28.setText("Browse");
        jToggleButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton28ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton28, gridBagConstraints);

        jToggleButton29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton29.setText("Cancel");
        jToggleButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton29ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel17.add(jToggleButton29, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        MACSPanel.add(jPanel17, gridBagConstraints);

        jPanel18.setBackground(new java.awt.Color(247, 248, 248));
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        jLabel56.setText("Execution:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel18.add(jLabel56, gridBagConstraints);

        MSudoRadioButton.setBackground(new java.awt.Color(247, 248, 248));
        MExecution.add(MSudoRadioButton);
        MSudoRadioButton.setText("sudo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 10, 10);
        jPanel18.add(MSudoRadioButton, gridBagConstraints);

        MDockerRadioButton.setBackground(new java.awt.Color(247, 248, 248));
        MExecution.add(MDockerRadioButton);
        MDockerRadioButton.setSelected(true);
        MDockerRadioButton.setText("docker");
        MDockerRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MDockerRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel18.add(MDockerRadioButton, gridBagConstraints);

        jLabel57.setText("Thread number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel18.add(jLabel57, gridBagConstraints);

        MThreadText.setText("8");
        MThreadText.setToolTipText("The number of threads which will be used during the computation.");
        MThreadText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MThreadTextFocusLost(evt);
            }
        });
        MThreadText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MThreadTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.05;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel18.add(MThreadText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel18.add(jLabel61, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        MACSPanel.add(jPanel18, gridBagConstraints);

        jPanel19.setBackground(new java.awt.Color(247, 248, 248));
        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel19.setLayout(new java.awt.GridBagLayout());

        jLabel63.setText("Tool selection:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel19.add(jLabel63, gridBagConstraints);

        MToolComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "macs", "sicer" }));
        MToolComboBox.setToolTipText("");
        MToolComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                MToolComboBoxItemStateChanged(evt);
            }
        });
        MToolComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MToolComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 40, 10, 10);
        jPanel19.add(MToolComboBox, gridBagConstraints);

        Tool.setLayout(new java.awt.CardLayout());

        jPanel22.setBackground(new java.awt.Color(247, 248, 248));
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jLabel78.setText("MACS min. mfold:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel22.add(jLabel78, gridBagConstraints);

        MMaxmfoldText.setText("30");
        MMaxmfoldText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MMaxmfoldTextFocusLost(evt);
            }
        });
        MMaxmfoldText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMaxmfoldTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel22.add(MMaxmfoldText, gridBagConstraints);

        jLabel79.setText("MACS p-value:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel22.add(jLabel79, gridBagConstraints);

        jLabel82.setText("MACS max. mfold:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel22.add(jLabel82, gridBagConstraints);

        MMinmfoldText.setText("10");
        MMinmfoldText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MMinmfoldTextFocusLost(evt);
            }
        });
        MMinmfoldText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMinmfoldTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel22.add(MMinmfoldText, gridBagConstraints);

        MMpvalueText.setText("1e-5");
        MMpvalueText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MMpvalueTextFocusLost(evt);
            }
        });
        MMpvalueText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMpvalueTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel22.add(MMpvalueText, gridBagConstraints);

        Tool.add(jPanel22, "MACS");

        jPanel23.setBackground(new java.awt.Color(247, 248, 248));
        jPanel23.setLayout(new java.awt.GridBagLayout());

        jLabel80.setText("SICER windows:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel23.add(jLabel80, gridBagConstraints);

        MSgsizeText.setText("200");
        MSgsizeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MSgsizeTextFocusLost(evt);
            }
        });
        MSgsizeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MSgsizeTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel23.add(MSgsizeText, gridBagConstraints);

        jLabel81.setText("SICER FDR:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel23.add(jLabel81, gridBagConstraints);

        jLabel83.setText("SICER gsize:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel23.add(jLabel83, gridBagConstraints);

        MSWindowsText.setText("200");
        MSWindowsText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MSWindowsTextFocusLost(evt);
            }
        });
        MSWindowsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MSWindowsTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 10);
        jPanel23.add(MSWindowsText, gridBagConstraints);

        MSFDRText.setText("0.1");
        MSFDRText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MSFDRTextFocusLost(evt);
            }
        });
        MSFDRText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MSFDRTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel23.add(MSFDRText, gridBagConstraints);

        Tool.add(jPanel23, "SICER");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        jPanel19.add(Tool, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        MACSPanel.add(jPanel19, gridBagConstraints);

        jPanel20.setBackground(new java.awt.Color(247, 248, 248));
        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        MAdapter5Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MAdapter5TextFocusLost(evt);
            }
        });
        MAdapter5Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAdapter5TextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 27;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MAdapter5Text, gridBagConstraints);

        jLabel68.setText("Adapter 5':");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(jLabel68, gridBagConstraints);

        jLabel69.setText("Adapter 3':");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(jLabel69, gridBagConstraints);

        MAdapter3Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MAdapter3TextFocusLost(evt);
            }
        });
        MAdapter3Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAdapter3TextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 27;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MAdapter3Text, gridBagConstraints);

        jLabel70.setText("Min length:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(jLabel70, gridBagConstraints);

        MTTSText.setText("0");
        MTTSText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MTTSTextFocusLost(evt);
            }
        });
        MTTSText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MTTSTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MTTSText, gridBagConstraints);

        jLabel71.setText("Max. upstream distance:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(jLabel71, gridBagConstraints);

        jLabel72.setText("Organism:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(jLabel72, gridBagConstraints);

        jLabel73.setText("Remove duplicates:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(jLabel73, gridBagConstraints);

        MRyesRadioButton.setBackground(new java.awt.Color(247, 248, 248));
        MRemoveDuplicates.add(MRyesRadioButton);
        MRyesRadioButton.setText("yes");
        MRyesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MRyesRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MRyesRadioButton, gridBagConstraints);

        MRnoRadioButton.setBackground(new java.awt.Color(247, 248, 248));
        MRemoveDuplicates.add(MRnoRadioButton);
        MRnoRadioButton.setSelected(true);
        MRnoRadioButton.setText("no");
        MRnoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MRnoRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MRnoRadioButton, gridBagConstraints);

        jLabel74.setText("Read  length:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(jLabel74, gridBagConstraints);

        MOrgComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "hg19", "hg38", "mm9", "mm10" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MOrgComboBox, gridBagConstraints);

        MMinLengthText.setText("30");
        MMinLengthText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MMinLengthTextFocusLost(evt);
            }
        });
        MMinLengthText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMinLengthTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MMinLengthText, gridBagConstraints);

        MMaxUpstreamText.setText("10000");
        MMaxUpstreamText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MMaxUpstreamTextFocusLost(evt);
            }
        });
        MMaxUpstreamText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMaxUpstreamTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MMaxUpstreamText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 21;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        jPanel20.add(jLabel75, gridBagConstraints);

        jLabel76.setText("TTS distance:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(jLabel76, gridBagConstraints);

        MReadLengthTextField.setText("50");
        MReadLengthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MReadLengthTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel20.add(MReadLengthTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        MACSPanel.add(jPanel20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(MACSPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void vCloseButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vCloseButton4ActionPerformed
        //RESET FIELDS
        MDockerRadioButton.setSelected(true);
        MOutputFolderText.setText("");
        MScratchFolderText.setText("");
        MGenomeFolderText.setText("");
        MTestFolderText.setText("");
        MMockFolderText.setText("");
        MThreadText.setText(Integer.toString(MainFrame.GS.getDefaultThread()));
        MAdapter5Text.setText(MainFrame.GS.getDefaultAdapter3());
        MAdapter3Text.setText(MainFrame.GS.getDefaultAdapter3());
        MMinLengthText.setText("30");
        MOrgComboBox.setSelectedIndex(0);
        MRnoRadioButton.setSelected(true);
        MMaxUpstreamText.setText("10000");
        MTTSText.setText("0");
        MMinmfoldText.setText("10");
        MMpvalueText.setText("1e-5");
        MMaxmfoldText.setText("30");
        MSWindowsText.setText("200");
        MSgsizeText.setText("200");
        MSFDRText.setText("0.1");
        MReadLengthTextField.setText("50");
        MToolComboBox.setSelectedIndex(0);
        //RESET FIELDS
        CardLayout card = (CardLayout)MainFrame.MainPanel.getLayout();
        card.show(MainFrame.MainPanel, "Empty");
        MainFrame.CurrentLayout="Empty";
        //GL.setAvoidProcListValueChanged(-1);
        //        AnalysisTree.clearSelection();
    }//GEN-LAST:event_vCloseButton4ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        //Field check
        if (MReadLengthTextField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified a read length value","Error: read length  value",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (MToolComboBox.getSelectedIndex()==0){
            if (MMinmfoldText.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "You have to specified a MACS min. mfold  value","Error:  MACS min. mfold  value",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else
            if (MMpvalueText.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "You have to specified a MACS p-value","Error: MACS p-velue",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else
            if (MMaxmfoldText.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "You have to specified a MACS max. mfold value","Error: MACS max. mfold value",JOptionPane.ERROR_MESSAGE);
                return;
            }

        }
        else
        {
            if (MSWindowsText.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "You have to specified a  SICER window  value","Error:  SICER window  value",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else
            if (MSgsizeText.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "You have to specified a SICER g-size value","Error: SICER g-size  value",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else
            if (MSFDRText.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "You have to specified a SICER FDR value","Error: SICER FDR value",JOptionPane.ERROR_MESSAGE);
                return;
            }

        }
        if (MTTSText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an MTTS   value","Error: MTTS   value",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        if (MMaxUpstreamText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified a maximum upstream  value","Error: Max upstream   value",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else

        if (MOutputFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an output folder","Error: Output  folder",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        if (MScratchFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified a scratch folder","Error:  scratch folder",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        if (MGenomeFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified a genome folder","Error: Genome folder",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        if (MMockFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an Mock folder","Error: Mock folder",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        if (MThreadText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified the number of threads that will be used.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
            MThreadText.requestFocusInWindow();
            return;
        }
        try
        {
            Integer x = Integer.valueOf(MThreadText.getText());
            if (x<=0){
                JOptionPane.showMessageDialog(this, "You have to specified a value greater than 0.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
                MThreadText.requestFocusInWindow();
                return;
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "You have to specified the number of threads that will be used.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
            MThreadText.requestFocusInWindow();
            return;
        }

        if ((!MAdapter5Text.getText().isEmpty())&&(!MainFrame.adapter.matcher(MAdapter5Text.getText()).matches())){
            JOptionPane.showMessageDialog(this, "The specified Adapter format is not valid.","Error: Adapter 5'",JOptionPane.ERROR_MESSAGE);
            MAdapter5Text.requestFocusInWindow();
        }
        else{
            if ((!MAdapter3Text.getText().isEmpty())&&(!MainFrame.adapter.matcher(MAdapter3Text.getText()).matches())){
                JOptionPane.showMessageDialog(this, "The specified Adapter format is not valid.","Error: Adapter 3'",JOptionPane.ERROR_MESSAGE);
                MAdapter3Text.requestFocusInWindow();
            }
            else{
                if (MMinLengthText.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "You have to specified a value for the minimum lenght.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                    MMinLengthText.requestFocusInWindow();
                    return;
                }
                try{
                    Integer x = Integer.valueOf(MMinLengthText.getText());
                    if (x<0){
                        JOptionPane.showMessageDialog(this, "You have to specified a positive value.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                        MMinLengthText.requestFocusInWindow();
                        return;
                    }
                }
                catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "You have to specified a positive value.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                    MMinLengthText.requestFocusInWindow();
                    return;
                }

                if (!MainFrame.org.matcher(vOrganismText.getText()).matches()){
                    JOptionPane.showMessageDialog(this, "The specified organism is not valid.","Error: Organism",JOptionPane.ERROR_MESSAGE);
                   vOrganismText.requestFocusInWindow();
                }
                else{
                    //execute code
                    Runtime rt = Runtime.getRuntime();
                    try{
                        String[] cmd = {"/bin/bash","-c","   bash ./execMACS-SICER.sh "};

                        if (MSudoRadioButton.isSelected()){
                            cmd[2]+= "group=\\\"sudo\\\"";
                        }
                        else{
                            cmd[2]+= "group=\\\"docker\\\"";
                        }
                        cmd[2]+= " output.folder=\\\""+MOutputFolderText.getText()+"\\\" scratch.folder=\\\""+MScratchFolderText.getText()+"\\\" adapter5=\\\""+MAdapter5Text.getText()+"\\\" adapter3=\\\""+MAdapter3Text.getText()+"\\\"";
                        cmd[2]+= " mock.folder=\\\""+MMockFolderText.getText()+"\\\" test.folder=\\\""+MTestFolderText.getText()+"\\\"";
                        cmd[2]+= " seq.type=\\\"se\\\" threads="+vThreadText.getText()+" min.length="+MMinLengthText.getText()+" genome.folder=\\\""+MGenomeFolderText.getText()+"\\\"";
                        cmd[2]+= " mock.id=\\\"igg\\\"  test.id=\\\"tf\\\" genome=\\\""+MOrgComboBox.getSelectedItem().toString()+"\\\" read.size="+MReadLengthTextField.getText();
                        cmd[2]+= " tool=\\\""+MToolComboBox.getSelectedItem().toString()+"\\\" macs.min.mfold="+MMinmfoldText.getText()+" macs.max.mfold="+MMaxmfoldText.getText()+" macs.pval=\\\""+MMpvalueText.getText()+"\\\"";
                        cmd[2]+= " sicer.wsize="+MSWindowsText.getText()+" sicer.gsize="+MSgsizeText.getText()+" sicer.fdr="+MSFDRText.getText()+ " tss.distance="+MTTSText.getText()+" max.upstream.distance="+MMaxUpstreamText.getText();
                        if (MRyesRadioButton.isSelected())
                        cmd[2]+= " remove.duplicates=\\\"Y\\\"";
                        else
                        cmd[2]+= " remove.duplicates=\\\"N\\\"";
                        cmd[2]+=" "+MOutputFolderText.getText() +" >& "+MOutputFolderText.getText()+"/outputExecution ";

                        //ProcessStatus.setText(pr.toString());
                        if (MainFrame.listProcRunning.size()<MainFrame.GS.getMaxSizelistProcRunning()){
                            Process pr = rt.exec(cmd);
                            //System.out.println("lanciato "+pr);
                            MainFrame.ElProcRunning tmp= new MainFrame.ElProcRunning("MACS & SICER analysis", MOutputFolderText.getText(),pr,MainFrame.listModel.getSize());
                            MainFrame.listProcRunning.add(tmp);
                            java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/running.png");
                            ImageIcon image2 = new ImageIcon(imgURL);
                            MainFrame.GL.setAvoidProcListValueChanged(-1);
                            MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Running]   "+tmp.toString(),"Running",tmp.path, image2 ));
                            MainFrame.GL.setAvoidProcListValueChanged(0);
                            //addElement("RNAseq counting workflow (data input: "+vFastQFolderText.getText()+")            [Runnig]");
                            if(MainFrame.listProcRunning.size()==1){
                                MainFrame.t=new Timer();
                                MainFrame.t.scheduleAtFixedRate(new MainFrame.MyTask(), 5000, 5000);
                            }
                        }

                        else{
                            MainFrame.ElProcWaiting tmp= new MainFrame.ElProcWaiting("MACS & SICER analysis",MOutputFolderText.getText(),cmd,MainFrame.listModel.getSize());
                            MainFrame.listProcWaiting.add(tmp);
                            java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/waiting.png");
                            ImageIcon image2 = new ImageIcon(imgURL);
                            MainFrame.GL.setAvoidProcListValueChanged(-1);
                            MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Waiting]   "+tmp.toString(),"Waiting",tmp.path,image2));
                            MainFrame.GL.setAvoidProcListValueChanged(0);

                        }
                        MainFrame.GL.setAvoidProcListValueChanged(-1);
                        MainFrame.ProcList.setModel(MainFrame.listModel);
                        MainFrame.ProcList.setCellRenderer(new MainFrame.ListEntryCellRenderer());
                        MainFrame.GL.setAvoidProcListValueChanged(0);
                    }
                    catch(IOException e) {
                        JOptionPane.showMessageDialog(this, e.toString(),"Error execution",JOptionPane.ERROR_MESSAGE);
                        System.out.println(e.toString());
                    }
                    JOptionPane.showMessageDialog(this, "MACS & SICER analysis task was scheduled","Confermation",JOptionPane.INFORMATION_MESSAGE);
                }
                //execute code
            }
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        MDockerRadioButton.setSelected(true);
        MOutputFolderText.setText("");
        MScratchFolderText.setText("");
        MGenomeFolderText.setText("");
        MTestFolderText.setText("");
        MMockFolderText.setText("");
        MThreadText.setText(Integer.toString(MainFrame.GS.getDefaultThread()));
        MAdapter5Text.setText(MainFrame.GS.getDefaultAdapter5());
        MAdapter3Text.setText(MainFrame.GS.getDefaultAdapter3());
        MMinLengthText.setText("30");
        MOrgComboBox.setSelectedIndex(0);
        MRnoRadioButton.setSelected(true);
        MMaxUpstreamText.setText("10000");
        MTTSText.setText("0");
        MMinmfoldText.setText("10");
        MMpvalueText.setText("1e-5");
        MMaxmfoldText.setText("30");
        MSWindowsText.setText("200");
        MSgsizeText.setText("200");
        MSFDRText.setText("0.1");
        MReadLengthTextField.setText("50");
        MToolComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
       // saveAsMenuItemActionPerformed(evt);
    }//GEN-LAST:event_jButton25ActionPerformed

    private void MOutputFolderTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MOutputFolderTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MOutputFolderTextActionPerformed

    private void jToggleButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton20ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(MOutputFolderText.getText().equals(""))){
            File file =new File(MOutputFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            MOutputFolderText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton20ActionPerformed

    private void jToggleButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton21ActionPerformed
        MOutputFolderText.setText("");
    }//GEN-LAST:event_jToggleButton21ActionPerformed

    private void jToggleButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton22ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(MScratchFolderText.getText().equals(""))){
            File file =new File(MScratchFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            MScratchFolderText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton22ActionPerformed

    private void jToggleButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton23ActionPerformed
        MScratchFolderText.setText("");
    }//GEN-LAST:event_jToggleButton23ActionPerformed

    private void jToggleButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton24ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(MMockFolderText.getText().equals(""))){
            File file =new File(MMockFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            MMockFolderText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton24ActionPerformed

    private void jToggleButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton25ActionPerformed
        MMockFolderText.setText("");
    }//GEN-LAST:event_jToggleButton25ActionPerformed

    private void jToggleButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton26ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(MGenomeFolderText.getText().equals(""))){
            File file =new File(MGenomeFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            MGenomeFolderText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton26ActionPerformed

    private void jToggleButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton27ActionPerformed
        MGenomeFolderText.setText("");
    }//GEN-LAST:event_jToggleButton27ActionPerformed

    private void jToggleButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton28ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(MTestFolderText.getText().equals(""))){
            File file =new File(MTestFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            MTestFolderText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton28ActionPerformed

    private void jToggleButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton29ActionPerformed
        MTestFolderText.setText("");
    }//GEN-LAST:event_jToggleButton29ActionPerformed

    private void MDockerRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MDockerRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MDockerRadioButtonActionPerformed

    private void MThreadTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MThreadTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MThreadTextFocusLost

    private void MThreadTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MThreadTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MThreadTextActionPerformed

    private void MToolComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_MToolComboBoxItemStateChanged
        if ((MToolComboBox.getSelectedItem().toString()).equals("macs")){
            CardLayout cardTool = (CardLayout)Tool.getLayout();
            cardTool.show(Tool, "MACS");
        }
        else{
            CardLayout cardTool = (CardLayout)Tool.getLayout();
            cardTool.show(Tool, "SICER");
        }
    }//GEN-LAST:event_MToolComboBoxItemStateChanged

    private void MToolComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MToolComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MToolComboBoxActionPerformed

    private void MMaxmfoldTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MMaxmfoldTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MMaxmfoldTextFocusLost

    private void MMaxmfoldTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMaxmfoldTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MMaxmfoldTextActionPerformed

    private void MMinmfoldTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MMinmfoldTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MMinmfoldTextFocusLost

    private void MMinmfoldTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMinmfoldTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MMinmfoldTextActionPerformed

    private void MMpvalueTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MMpvalueTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MMpvalueTextFocusLost

    private void MMpvalueTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMpvalueTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MMpvalueTextActionPerformed

    private void MSgsizeTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MSgsizeTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MSgsizeTextFocusLost

    private void MSgsizeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MSgsizeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MSgsizeTextActionPerformed

    private void MSWindowsTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MSWindowsTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MSWindowsTextFocusLost

    private void MSWindowsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MSWindowsTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MSWindowsTextActionPerformed

    private void MSFDRTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MSFDRTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MSFDRTextFocusLost

    private void MSFDRTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MSFDRTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MSFDRTextActionPerformed

    private void MAdapter5TextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MAdapter5TextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MAdapter5TextFocusLost

    private void MAdapter5TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAdapter5TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MAdapter5TextActionPerformed

    private void MAdapter3TextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MAdapter3TextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MAdapter3TextFocusLost

    private void MAdapter3TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAdapter3TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MAdapter3TextActionPerformed

    private void MTTSTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MTTSTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MTTSTextFocusLost

    private void MTTSTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MTTSTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MTTSTextActionPerformed

    private void MRyesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MRyesRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MRyesRadioButtonActionPerformed

    private void MRnoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MRnoRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MRnoRadioButtonActionPerformed

    private void MMinLengthTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MMinLengthTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MMinLengthTextFocusLost

    private void MMinLengthTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMinLengthTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MMinLengthTextActionPerformed

    private void MMaxUpstreamTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MMaxUpstreamTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MMaxUpstreamTextFocusLost

    private void MMaxUpstreamTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMaxUpstreamTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MMaxUpstreamTextActionPerformed

    private void MReadLengthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MReadLengthTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MReadLengthTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MACSPanel;
    public static javax.swing.JTextField MAdapter3Text;
    public static javax.swing.JTextField MAdapter5Text;
    private javax.swing.JRadioButton MDockerRadioButton;
    private javax.swing.ButtonGroup MExecution;
    private javax.swing.JTextField MGenomeFolderText;
    private javax.swing.JTextField MMaxUpstreamText;
    private javax.swing.JTextField MMaxmfoldText;
    private javax.swing.JTextField MMinLengthText;
    private javax.swing.JTextField MMinmfoldText;
    private javax.swing.JTextField MMockFolderText;
    private javax.swing.JTextField MMpvalueText;
    public static javax.swing.JComboBox<String> MOrgComboBox;
    private javax.swing.JTextField MOutputFolderText;
    private javax.swing.JTextField MReadLengthTextField;
    private javax.swing.ButtonGroup MRemoveDuplicates;
    private javax.swing.JRadioButton MRnoRadioButton;
    private javax.swing.JRadioButton MRyesRadioButton;
    private javax.swing.JTextField MSFDRText;
    public static javax.swing.JTextField MSWindowsText;
    private javax.swing.JTextField MScratchFolderText;
    private javax.swing.JTextField MSgsizeText;
    private javax.swing.JRadioButton MSudoRadioButton;
    private javax.swing.JTextField MTTSText;
    private javax.swing.JTextField MTestFolderText;
    public static javax.swing.JTextField MThreadText;
    public static javax.swing.JComboBox<String> MToolComboBox;
    public static javax.swing.JPanel Tool;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JToggleButton jToggleButton20;
    private javax.swing.JToggleButton jToggleButton21;
    private javax.swing.JToggleButton jToggleButton22;
    private javax.swing.JToggleButton jToggleButton23;
    private javax.swing.JToggleButton jToggleButton24;
    private javax.swing.JToggleButton jToggleButton25;
    private javax.swing.JToggleButton jToggleButton26;
    private javax.swing.JToggleButton jToggleButton27;
    private javax.swing.JToggleButton jToggleButton28;
    private javax.swing.JToggleButton jToggleButton29;
    private javax.swing.JButton vCloseButton4;
    // End of variables declaration//GEN-END:variables
}
