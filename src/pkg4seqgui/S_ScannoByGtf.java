/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;
import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Timer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static pkg4seqgui.MainFrame.getPreferences;

/**
 *
 * @author user
 */
public class S_ScannoByGtf extends javax.swing.JPanel {

    /**
     * Creates new form S_scannobyGtf
     */
    public S_ScannoByGtf() {
        initComponents();
    }
    private static final long serialVersionUID = 67756333338L;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mExecution = new javax.swing.ButtonGroup();
        S_LorenzFilterPanel = new javax.swing.JPanel();
        vCloseButton5 = new javax.swing.JButton();
        S_LorenzFilter_jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        jLabel120 = new javax.swing.JLabel();
        S_umiXgene = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        S_ribo = new javax.swing.JComboBox<>();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        S_countTable = new javax.swing.JTextField();
        S_MT = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        S_gtfname = new javax.swing.JTextField();
        jLabel122 = new javax.swing.JLabel();
        S_biotype = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel123 = new javax.swing.JLabel();
        S_ribostart = new javax.swing.JTextField();
        jLabel124 = new javax.swing.JLabel();
        S_riboend = new javax.swing.JTextField();
        jLabel125 = new javax.swing.JLabel();
        S_mitostart = new javax.swing.JTextField();
        jLabel126 = new javax.swing.JLabel();
        S_mitoend = new javax.swing.JTextField();
        S_genethreshold = new javax.swing.JTextField();
        jLabel127 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jLabel113 = new javax.swing.JLabel();
        cSudoRadioButton = new javax.swing.JRadioButton();
        cDockerRadioButton = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        S_LorenzFilterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "Annotation and Ribo/Mito filtering", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(255, 102, 102))); // NOI18N
        S_LorenzFilterPanel.setToolTipText(null);
        S_LorenzFilterPanel.setLayout(new java.awt.GridBagLayout());

        vCloseButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        vCloseButton5.setText("Close");
        vCloseButton5.setToolTipText(null);
        vCloseButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vCloseButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        S_LorenzFilterPanel.add(vCloseButton5, gridBagConstraints);

        S_LorenzFilter_jButton39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        S_LorenzFilter_jButton39.setText("Execute");
        S_LorenzFilter_jButton39.setToolTipText(null);
        S_LorenzFilter_jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_LorenzFilter_jButton39ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        S_LorenzFilterPanel.add(S_LorenzFilter_jButton39, gridBagConstraints);

        jButton40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        jButton40.setText("Reset");
        jButton40.setToolTipText(null);
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        S_LorenzFilterPanel.add(jButton40, gridBagConstraints);

        jPanel30.setBackground(new java.awt.Color(248, 248, 248));
        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel30.setToolTipText(null);
        jPanel30.setLayout(new java.awt.GridBagLayout());

        jLabel120.setText("UMIs X gene:");
        jLabel120.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel120, gridBagConstraints);

        S_umiXgene.setText("3");
        S_umiXgene.setToolTipText(null);
        S_umiXgene.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                S_umiXgeneFocusLost(evt);
            }
        });
        S_umiXgene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_umiXgeneActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 70, 10, 10);
        jPanel30.add(S_umiXgene, gridBagConstraints);

        jLabel2.setText("Counts table:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel2, gridBagConstraints);

        S_ribo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TRUE", "FALSE" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(S_ribo, gridBagConstraints);

        jButton29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        jButton29.setText("Browse");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jButton29, gridBagConstraints);

        jButton30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jButton30.setText("Cancel");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jButton30, gridBagConstraints);

        jLabel3.setText("Ribo proteins:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel3, gridBagConstraints);

        S_countTable.setEditable(false);
        S_countTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_countTableActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 70, 10, 10);
        jPanel30.add(S_countTable, gridBagConstraints);

        S_MT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TRUE", "FALSE" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 70, 10, 10);
        jPanel30.add(S_MT, gridBagConstraints);

        jLabel4.setText("Mito proteins:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel4, gridBagConstraints);

        jLabel121.setText("gtf.name:");
        jLabel121.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel121, gridBagConstraints);

        S_gtfname.setToolTipText(null);
        S_gtfname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                S_gtfnameFocusLost(evt);
            }
        });
        S_gtfname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_gtfnameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 70, 10, 10);
        jPanel30.add(S_gtfname, gridBagConstraints);

        jLabel122.setText("Biotype:");
        jLabel122.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel122, gridBagConstraints);

        S_biotype.setText("protein_coding");
        S_biotype.setToolTipText(null);
        S_biotype.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                S_biotypeFocusLost(evt);
            }
        });
        S_biotype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_biotypeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(S_biotype, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        S_LorenzFilterPanel.add(jPanel30, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(248, 248, 248));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel123.setText("Ribosomal % Start:");
        jLabel123.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel123, gridBagConstraints);

        S_ribostart.setText("20");
        S_ribostart.setToolTipText(null);
        S_ribostart.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                S_ribostartFocusLost(evt);
            }
        });
        S_ribostart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_ribostartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 13, 10, 10);
        jPanel2.add(S_ribostart, gridBagConstraints);

        jLabel124.setText("Ribosomal % End:");
        jLabel124.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel124, gridBagConstraints);

        S_riboend.setText("70");
        S_riboend.setToolTipText(null);
        S_riboend.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                S_riboendFocusLost(evt);
            }
        });
        S_riboend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_riboendActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(S_riboend, gridBagConstraints);

        jLabel125.setText("Mitochondrial % Start:");
        jLabel125.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel125, gridBagConstraints);

        S_mitostart.setText("1");
        S_mitostart.setToolTipText(null);
        S_mitostart.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                S_mitostartFocusLost(evt);
            }
        });
        S_mitostart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_mitostartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 13, 10, 10);
        jPanel2.add(S_mitostart, gridBagConstraints);

        jLabel126.setText("Genes Threshold:");
        jLabel126.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel126, gridBagConstraints);

        S_mitoend.setText("100");
        S_mitoend.setToolTipText(null);
        S_mitoend.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                S_mitoendFocusLost(evt);
            }
        });
        S_mitoend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_mitoendActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(S_mitoend, gridBagConstraints);

        S_genethreshold.setText("250");
        S_genethreshold.setToolTipText(null);
        S_genethreshold.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                S_genethresholdFocusLost(evt);
            }
        });
        S_genethreshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_genethresholdActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 13, 10, 10);
        jPanel2.add(S_genethreshold, gridBagConstraints);

        jLabel127.setText("Mitochondrial % End:");
        jLabel127.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel127, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        S_LorenzFilterPanel.add(jPanel2, gridBagConstraints);

        jPanel31.setBackground(new java.awt.Color(248, 248, 248));
        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel31.setToolTipText(null);
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jLabel113.setText("Execution:");
        jLabel113.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel31.add(jLabel113, gridBagConstraints);

        cSudoRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        mExecution.add(cSudoRadioButton);
        cSudoRadioButton.setText("sudo");
        cSudoRadioButton.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 92, 10, 10);
        jPanel31.add(cSudoRadioButton, gridBagConstraints);

        cDockerRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        mExecution.add(cDockerRadioButton);
        cDockerRadioButton.setSelected(true);
        cDockerRadioButton.setText("docker");
        cDockerRadioButton.setToolTipText(null);
        cDockerRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cDockerRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel31.add(cDockerRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        S_LorenzFilterPanel.add(jPanel31, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(S_LorenzFilterPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void vCloseButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vCloseButton5ActionPerformed
        jButton40ActionPerformed(evt); 
        MainFrame.setCard(null);
        //GL.setAvoidProcListValueChanged(-1);
        //        AnalysisTree.clearSelection();
    }//GEN-LAST:event_vCloseButton5ActionPerformed

    private void S_LorenzFilter_jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_LorenzFilter_jButton39ActionPerformed
        String countsFile = S_countTable.getText(),
               gtfName = S_gtfname.getText(), 
               biotype = S_biotype.getText(); 
        Integer umi, ribo_start, ribo_end, mito_start, mito_end, threshold; 
        
        if (MainFrame.checkPath(this, countsFile, "counts table file") ||
            MainFrame.checkPath(this, gtfName, "GTF name") || 
            MainFrame.checkPath(this, biotype, "biotype"))
            return; 
        
        if ((umi = MainFrame.checkIntValue(this, S_umiXgene.getText(), "UMIs X gene")) == null ||
            (ribo_start = MainFrame.checkIntValue(this, S_ribostart.getText(), "Ribosomal % start value")) == null ||
            (ribo_end = MainFrame.checkIntValue(this, S_riboend.getText(), "Ribosomal % end value")) == null ||
            (mito_start = MainFrame.checkIntValue(this, S_mitostart.getText(), "Mitochrondrial % start value")) == null ||
            (mito_end = MainFrame.checkIntValue(this, S_mitoend.getText(), "Mitochrondrial % end value")) == null ||
            (threshold = MainFrame.checkIntValue(this, S_genethreshold.getText(), "genes threshold")) == null)
            return;             
        
        String outputFolder = Paths.get(countsFile).getParent().toString();
        ScriptCaller params = new ScriptCaller("scannoByGtf.R", outputFolder)
                .addArg("group", cSudoRadioButton.isSelected() ? "sudo" : "docker")
                .addArg("file", countsFile)
                .addArg("gtf.name", gtfName)
                .addArg("biotype", biotype)
                .addArg("umiXgene", umi)
                .addArg("ribo.proteins", S_ribo.getSelectedItem().toString().equals("TRUE"))
                .addArg("mt", S_MT.getSelectedItem().toString().equals("TRUE"))
                .addArg("R1", ribo_start)
                .addArg("R2", ribo_end)
                .addArg("R3", mito_start)
                .addArg("R4", mito_end)
                .addArg("thresholdGenes", threshold);
        MainFrame.execCommand(this, "ScannoByGtf", params);
    }//GEN-LAST:event_S_LorenzFilter_jButton39ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        S_countTable.setText("");
    }//GEN-LAST:event_jButton40ActionPerformed

    private void S_umiXgeneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S_umiXgeneFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_S_umiXgeneFocusLost

    private void S_umiXgeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_umiXgeneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_umiXgeneActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        Path p = Paths.get(S_countTable.getText());
        Path folder = p.getParent();

        JFileChooser openDir = new JFileChooser();
        if (!(S_countTable.getText().equals(""))){
            File file =new File(folder.toString());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            S_countTable.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        S_countTable.setText("");
    }//GEN-LAST:event_jButton30ActionPerformed

    private void S_countTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_countTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_countTableActionPerformed

    private void cDockerRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cDockerRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cDockerRadioButtonActionPerformed

    private void S_gtfnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S_gtfnameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_S_gtfnameFocusLost

    private void S_gtfnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_gtfnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_gtfnameActionPerformed

    private void S_biotypeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S_biotypeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_S_biotypeFocusLost

    private void S_biotypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_biotypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_biotypeActionPerformed

    private void S_ribostartFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S_ribostartFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_S_ribostartFocusLost

    private void S_ribostartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_ribostartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_ribostartActionPerformed

    private void S_riboendFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S_riboendFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_S_riboendFocusLost

    private void S_riboendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_riboendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_riboendActionPerformed

    private void S_mitostartFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S_mitostartFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_S_mitostartFocusLost

    private void S_mitostartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_mitostartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_mitostartActionPerformed

    private void S_mitoendFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S_mitoendFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_S_mitoendFocusLost

    private void S_mitoendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_mitoendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_mitoendActionPerformed

    private void S_genethresholdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_S_genethresholdFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_S_genethresholdFocusLost

    private void S_genethresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_genethresholdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S_genethresholdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel S_LorenzFilterPanel;
    private javax.swing.JButton S_LorenzFilter_jButton39;
    private javax.swing.JComboBox<String> S_MT;
    public static javax.swing.JTextField S_biotype;
    private javax.swing.JTextField S_countTable;
    public static javax.swing.JTextField S_genethreshold;
    public static javax.swing.JTextField S_gtfname;
    public static javax.swing.JTextField S_mitoend;
    public static javax.swing.JTextField S_mitostart;
    private javax.swing.JComboBox<String> S_ribo;
    public static javax.swing.JTextField S_riboend;
    public static javax.swing.JTextField S_ribostart;
    public static javax.swing.JTextField S_umiXgene;
    private javax.swing.JRadioButton cDockerRadioButton;
    private javax.swing.JRadioButton cSudoRadioButton;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton40;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.ButtonGroup mExecution;
    private javax.swing.JButton vCloseButton5;
    // End of variables declaration//GEN-END:variables
}
