/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author user
 */
public class ExperimentPowerPanel extends javax.swing.JPanel {

    /**
     * Creates new form ExperimentPowerPanel
     */
    public ExperimentPowerPanel() {
        initComponents();
    }
    private static final long serialVersionUID = 57716333340L;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        ExperimentPowerPanel = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jLabel88 = new javax.swing.JLabel();
        EPOutputFolderText = new javax.swing.JTextField();
        SSbrowes1 = new javax.swing.JButton();
        SScancel1 = new javax.swing.JButton();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        EPCountTableText = new javax.swing.JTextField();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        EPExecuteButton1 = new javax.swing.JButton();
        EPSaveButton = new javax.swing.JButton();
        EPResetButton = new javax.swing.JButton();
        EPCloseButton = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        EPSampleText = new javax.swing.JTextField();
        EPGeneText = new javax.swing.JTextField();
        EPlog2Text = new javax.swing.JTextField();
        jLabel95 = new javax.swing.JLabel();
        EPFDRtext = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        ExperimentPowerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "Experiment power", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(0, 51, 102))); // NOI18N
        ExperimentPowerPanel.setLayout(new java.awt.GridBagLayout());

        jPanel25.setBackground(new java.awt.Color(247, 248, 248));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel25.setToolTipText(null);
        jPanel25.setLayout(new java.awt.GridBagLayout());

        jLabel88.setText("Output Folder:");
        jLabel88.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel25.add(jLabel88, gridBagConstraints);

        EPOutputFolderText.setEditable(false);
        EPOutputFolderText.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(10, 48, 10, 10);
        jPanel25.add(EPOutputFolderText, gridBagConstraints);

        SSbrowes1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        SSbrowes1.setText("Browse");
        SSbrowes1.setToolTipText("");
        SSbrowes1.setEnabled(false);
        SSbrowes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSbrowes1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel25.add(SSbrowes1, gridBagConstraints);

        SScancel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        SScancel1.setText("Cancel");
        SScancel1.setEnabled(false);
        SScancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SScancel1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel25.add(SScancel1, gridBagConstraints);
        jPanel25.add(jLabel89, new java.awt.GridBagConstraints());

        jLabel90.setText("Count table file:");
        jLabel90.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel25.add(jLabel90, gridBagConstraints);

        EPCountTableText.setEditable(false);
        EPCountTableText.setToolTipText(null);
        EPCountTableText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EPCountTableTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 48, 10, 10);
        jPanel25.add(EPCountTableText, gridBagConstraints);

        jButton29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        jButton29.setText("Browse");
        jButton29.setToolTipText(null);
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel25.add(jButton29, gridBagConstraints);

        jButton30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jButton30.setText("Cancel");
        jButton30.setToolTipText(null);
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel25.add(jButton30, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ExperimentPowerPanel.add(jPanel25, gridBagConstraints);

        EPExecuteButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        EPExecuteButton1.setText("Execute");
        EPExecuteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EPExecuteButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ExperimentPowerPanel.add(EPExecuteButton1, gridBagConstraints);

        EPSaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/86b.png"))); // NOI18N
        EPSaveButton.setText("Save conf.");
        EPSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EPSaveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ExperimentPowerPanel.add(EPSaveButton, gridBagConstraints);

        EPResetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        EPResetButton.setText("Reset");
        EPResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EPResetButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ExperimentPowerPanel.add(EPResetButton, gridBagConstraints);

        EPCloseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        EPCloseButton.setText("Close");
        EPCloseButton.setToolTipText("");
        EPCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EPCloseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ExperimentPowerPanel.add(EPCloseButton, gridBagConstraints);

        jPanel26.setBackground(new java.awt.Color(247, 248, 248));
        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel26.setToolTipText(null);
        jPanel26.setLayout(new java.awt.GridBagLayout());

        jLabel91.setText("Log2 fold change:");
        jLabel91.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel26.add(jLabel91, gridBagConstraints);

        jLabel92.setText("#gene for dispertion:");
        jLabel92.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel26.add(jLabel92, gridBagConstraints);
        jPanel26.add(jLabel93, new java.awt.GridBagConstraints());

        jLabel94.setText("Number of samples:");
        jLabel94.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel26.add(jLabel94, gridBagConstraints);

        EPSampleText.setText("3");
        EPSampleText.setToolTipText("the number of samples in each group");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel26.add(EPSampleText, gridBagConstraints);

        EPGeneText.setText("200");
        EPGeneText.setToolTipText(" an integer indicating the number of genes used in estimation of read counts and dispersion distribution");
        EPGeneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EPGeneTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel26.add(EPGeneText, gridBagConstraints);

        EPlog2Text.setText("1");
        EPlog2Text.setToolTipText("an integer indicating the minimum log2 fold change for prognostic genes between two group");
        EPlog2Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EPlog2TextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel26.add(EPlog2Text, gridBagConstraints);

        jLabel95.setText("False discovery rate:");
        jLabel95.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel26.add(jLabel95, gridBagConstraints);

        EPFDRtext.setText("0.1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel26.add(EPFDRtext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ExperimentPowerPanel.add(jPanel26, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(ExperimentPowerPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void SSbrowes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSbrowes1ActionPerformed
        MainFrame.browseTextFieldContent(this, EPOutputFolderText, JFileChooser.DIRECTORIES_ONLY);
    }//GEN-LAST:event_SSbrowes1ActionPerformed

    private void SScancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SScancel1ActionPerformed
        EPOutputFolderText.setText("");
    }//GEN-LAST:event_SScancel1ActionPerformed

    private void EPCountTableTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EPCountTableTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EPCountTableTextActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        JFileChooser openDir = MainFrame.browseTextFieldContent(this, EPCountTableText, JFileChooser.FILES_ONLY);
        EPOutputFolderText.setText(openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        EPCountTableText.setText("");
        EPOutputFolderText.setText("");
    }//GEN-LAST:event_jButton30ActionPerformed

    private void EPExecuteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EPExecuteButton1ActionPerformed
        String countTable = EPCountTableText.getText();
        String outputFolder = EPOutputFolderText.getText(); 
        int num_reps = 0, ngenes = 0; 
        float foldchange = 0, fdr = 0; 
                
        if (countTable.isEmpty()){
            JOptionPane.showMessageDialog(this, 
                    "You have to specified an input file",
                    "Error: input file",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (outputFolder.isEmpty()){
            JOptionPane.showMessageDialog(this, 
                    "You have to specified an output folder",
                    "Error: output folder",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        try
        {
            num_reps = Integer.valueOf(EPSampleText.getText().trim());
            if (num_reps <= 0){
                JOptionPane.showMessageDialog(this, 
                        "You have to specified a value greater than 0.",
                        "Error:  number of samples used in each group",
                        JOptionPane.ERROR_MESSAGE);
                EPSampleText.requestFocusInWindow();
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                    "You have to specified  a value for Log2fc threashold.",
                    "Error: number of samples used in each group",
                    JOptionPane.ERROR_MESSAGE);
            EPSampleText.requestFocusInWindow();
            return;
        }

        try {
            fdr = Float.valueOf(EPFDRtext.getText().trim());
            if (fdr <= 0){
                JOptionPane.showMessageDialog(this, 
                        "You have to specified a value greater than 0.",
                        "Error: FDR threashold",
                        JOptionPane.ERROR_MESSAGE);
                EPFDRtext.requestFocusInWindow();
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                    "You have to specified a value for the FDR threashold",
                    "Error: FDR threashold",
                    JOptionPane.ERROR_MESSAGE);
            EPFDRtext.requestFocusInWindow();
            return;
        }

        try {
            ngenes = Integer.valueOf(EPGeneText.getText().trim());
            if (ngenes <= 0){
                JOptionPane.showMessageDialog(this, 
                        "You have to specified a value greater than 0.",
                        "Error: #gene for dispertion",
                        JOptionPane.ERROR_MESSAGE);
                EPGeneText.requestFocusInWindow();
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                    "You have to specified a value for the FDR threashold",
                    "Error: #gene for dispertion",
                    JOptionPane.ERROR_MESSAGE);
            EPGeneText.requestFocusInWindow();
            return;
        }

        try {
            foldchange = Float.valueOf(EPlog2Text.getText().trim());
            if (foldchange <= 0){
                JOptionPane.showMessageDialog(this, 
                        "You have to specified a value greater than 0.",
                        "Error: Log2 fold change",
                        JOptionPane.ERROR_MESSAGE);
                EPlog2Text.requestFocusInWindow();
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                    "You have to specified a value for the FDR threashold",
                    "Error: Log2 fold change",
                    JOptionPane.ERROR_MESSAGE);
            EPlog2Text.requestFocusInWindow();
            return;
        }

        ScriptCaller params = new ScriptCaller("ExperimentPower.R", outputFolder)
                .addArg("filename", countTable)
                .addArg("replicatesXgroup", num_reps)
                .addArg("FDR", fdr)
                .addArg("genes4dispersion", ngenes)
                .addArg("log2fold.change", foldchange)
                .addArg("output.folder", outputFolder); 
        MainFrame.execCommand(this, "Experiment Stat. Power", params);
    }//GEN-LAST:event_EPExecuteButton1ActionPerformed

    private void EPSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EPSaveButtonActionPerformed
       // saveAsMenuItemActionPerformed(evt);
    }//GEN-LAST:event_EPSaveButtonActionPerformed

    private void EPResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EPResetButtonActionPerformed
        EPCountTableText.setText("");
        EPFDRtext.setText("0.1");
        EPGeneText.setText("200");
        EPOutputFolderText.setText("");
        EPSampleText.setText("3");
        EPlog2Text.setText("1");
    }//GEN-LAST:event_EPResetButtonActionPerformed

    private void EPCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EPCloseButtonActionPerformed
        EPResetButtonActionPerformed(evt); 
        MainFrame.setCard(null);
    }//GEN-LAST:event_EPCloseButtonActionPerformed

    private void EPGeneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EPGeneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EPGeneTextActionPerformed

    private void EPlog2TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EPlog2TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EPlog2TextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EPCloseButton;
    private javax.swing.JTextField EPCountTableText;
    private javax.swing.JButton EPExecuteButton1;
    private javax.swing.JTextField EPFDRtext;
    private javax.swing.JTextField EPGeneText;
    private javax.swing.JTextField EPOutputFolderText;
    private javax.swing.JButton EPResetButton;
    private javax.swing.JTextField EPSampleText;
    private javax.swing.JButton EPSaveButton;
    private javax.swing.JTextField EPlog2Text;
    private javax.swing.JPanel ExperimentPowerPanel;
    private javax.swing.JButton SSbrowes1;
    private javax.swing.JButton SScancel1;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    // End of variables declaration//GEN-END:variables
}
