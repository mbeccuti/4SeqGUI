/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;

import java.nio.file.Paths;
import javax.swing.JFileChooser;

/**
 *
 * @author Nicola Licheri
 */
public class S_AutoencoderCometSC extends javax.swing.JPanel {
    private static final long serialVersionUID = 77766633333L;
    /**
     * Creates new form S_AutoencoderCometSC
     */
    public S_AutoencoderCometSC() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        executionGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        executionParameters = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        sudoButton = new javax.swing.JRadioButton();
        dockerButton = new javax.swing.JRadioButton();
        fileParameters = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        inputFileTextField = new javax.swing.JTextField();
        browseInputFile = new javax.swing.JButton();
        cancelFile = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        scratchFolderTextField = new javax.swing.JTextField();
        browseScratch = new javax.swing.JButton();
        cancelScratch = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        outputFileTextField = new javax.swing.JTextField();
        browseOutputFile = new javax.swing.JButton();
        cancelOutputFile = new javax.swing.JButton();
        executeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        otherParameters = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nClustersTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        xValueCometTextField = new javax.swing.JTextField();
        separatorComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        nthreadsTextField = new javax.swing.JTextField();
        skipVisCheckBox = new javax.swing.JCheckBox();
        countsCheckBox = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        kValueComboBox = new javax.swing.JComboBox<>();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "Autoencoder Comet", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(255, 51, 204))); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        executionParameters.setBackground(new java.awt.Color(248, 248, 248));
        executionParameters.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        executionParameters.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("Execution:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        executionParameters.add(jLabel7, gridBagConstraints);

        executionGroup.add(sudoButton);
        sudoButton.setText("sudo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        executionParameters.add(sudoButton, gridBagConstraints);

        executionGroup.add(dockerButton);
        dockerButton.setSelected(true);
        dockerButton.setText("docker");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        executionParameters.add(dockerButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(executionParameters, gridBagConstraints);

        fileParameters.setBackground(new java.awt.Color(248, 248, 248));
        fileParameters.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        fileParameters.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Input file:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(jLabel2, gridBagConstraints);

        inputFileTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(inputFileTextField, gridBagConstraints);

        browseInputFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        browseInputFile.setText("Browse");
        browseInputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseInputFileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(browseInputFile, gridBagConstraints);

        cancelFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        cancelFile.setText("Cancel");
        cancelFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelFileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(cancelFile, gridBagConstraints);

        jLabel3.setText("Scratch folder: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(jLabel3, gridBagConstraints);

        scratchFolderTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(scratchFolderTextField, gridBagConstraints);

        browseScratch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        browseScratch.setText("Browse");
        browseScratch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseScratchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(browseScratch, gridBagConstraints);

        cancelScratch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        cancelScratch.setText("Cancel");
        cancelScratch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelScratchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(cancelScratch, gridBagConstraints);

        jLabel9.setText("Clustering file:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(jLabel9, gridBagConstraints);

        outputFileTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(outputFileTextField, gridBagConstraints);

        browseOutputFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        browseOutputFile.setText("Browse");
        browseOutputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseOutputFileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(browseOutputFile, gridBagConstraints);

        cancelOutputFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        cancelOutputFile.setText("Cancel");
        cancelOutputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelOutputFileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        fileParameters.add(cancelOutputFile, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(fileParameters, gridBagConstraints);

        executeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        executeButton.setText("Execute");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(executeButton, gridBagConstraints);

        resetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(resetButton, gridBagConstraints);

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(closeButton, gridBagConstraints);

        otherParameters.setBackground(new java.awt.Color(248, 248, 248));
        otherParameters.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        otherParameters.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Num. clusters: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Separator:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(nClustersTextField, gridBagConstraints);

        jLabel8.setText("X:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(xValueCometTextField, gridBagConstraints);

        separatorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TAB", "COMMA" }));
        separatorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                separatorComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(separatorComboBox, gridBagConstraints);

        jLabel10.setText("Num. threads:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(nthreadsTextField, gridBagConstraints);

        skipVisCheckBox.setText("Skip Visualization");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(skipVisCheckBox, gridBagConstraints);

        countsCheckBox.setText("Counts");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(countsCheckBox, gridBagConstraints);

        jLabel11.setText("K:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(jLabel11, gridBagConstraints);

        kValueComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        otherParameters.add(kValueComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(otherParameters, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void browseInputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseInputFileActionPerformed
        MainFrame.browseTextFieldContent(this, inputFileTextField, JFileChooser.FILES_ONLY);
    }//GEN-LAST:event_browseInputFileActionPerformed

    private void cancelFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelFileActionPerformed
        inputFileTextField.setText("");
    }//GEN-LAST:event_cancelFileActionPerformed

    private void browseScratchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseScratchActionPerformed
        MainFrame.browseTextFieldContent(this, scratchFolderTextField, JFileChooser.DIRECTORIES_ONLY);
    }//GEN-LAST:event_browseScratchActionPerformed

    private void cancelScratchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelScratchActionPerformed
        scratchFolderTextField.setText("");
    }//GEN-LAST:event_cancelScratchActionPerformed

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        String inputFile = inputFileTextField.getText(), 
               scratchFolder = scratchFolderTextField.getText(), 
               clusteringFile = outputFileTextField.getText();
        String separator = separatorComboBox.getSelectedItem().toString();
        Integer kValue = MainFrame.checkIntValue(this, kValueComboBox.getSelectedItem().toString(), "number of genes combination"); 
       
        if (MainFrame.checkPath(this, inputFile, "input file") || 
            MainFrame.checkPath(this, scratchFolder, "scratch folder") ||
            MainFrame.checkPath(this, clusteringFile, "clustering output file")) 
            return; 
        
        Integer nclusters, nthreads; 
        
        if ((nclusters = MainFrame.checkIntValue(this, nClustersTextField.getText(), "number of clusters")) == null || 
            (nthreads = MainFrame.checkIntValue(this, nthreadsTextField.getText(), "number of threads")) == null) 
            return; 
        
        Float xValue = MainFrame.checkFloatValue(this, xValueCometTextField.getText(), "XL-mHG comet value"); 
        
        if (xValue == null)
            return;             
        
        String outputFolder = Paths.get(inputFile).getParent().toString(); 
        ScriptCaller params = new ScriptCaller("autocomet.R", outputFolder)
                .addArg("group", sudoButton.isSelected() ? "sudo" : "docker")
                .addArg("scratch.folder", scratchFolder)
                .addArg("file", inputFile)
                .addArg("clustering.output", clusteringFile)
                .addArg("X", xValue)
                .addArg("K", kValue)
                .addArg("counts", countsCheckBox.isSelected())
                .addArg("skipvis", skipVisCheckBox.isSelected())
                .addArg("threads", nthreads)
                .addArg("nCluster", nclusters)
                .addArg("separator", separator);                
        MainFrame.execCommand(this, "Autoencoder comet", params);
    }//GEN-LAST:event_executeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        dockerButton.setSelected(true);
        inputFileTextField.setText("");
        scratchFolderTextField.setText("");
        nClustersTextField.setText("");
        nthreadsTextField.setText("");
        kValueComboBox.setSelectedIndex(0);
        xValueCometTextField.setText("");
        separatorComboBox.setSelectedIndex(0);
        skipVisCheckBox.setSelected(false);
        countsCheckBox.setSelected(false);
    }//GEN-LAST:event_resetButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        resetButtonActionPerformed(evt);
        MainFrame.setCard(null);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void separatorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_separatorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_separatorComboBoxActionPerformed

    private void browseOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseOutputFileActionPerformed
        MainFrame.browseTextFieldContent(this, outputFileTextField, JFileChooser.FILES_ONLY);
    }//GEN-LAST:event_browseOutputFileActionPerformed

    private void cancelOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelOutputFileActionPerformed
        outputFileTextField.setText("");
    }//GEN-LAST:event_cancelOutputFileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseInputFile;
    private javax.swing.JButton browseOutputFile;
    private javax.swing.JButton browseScratch;
    private javax.swing.JButton cancelFile;
    private javax.swing.JButton cancelOutputFile;
    private javax.swing.JButton cancelScratch;
    private javax.swing.JButton closeButton;
    private javax.swing.JCheckBox countsCheckBox;
    private javax.swing.JRadioButton dockerButton;
    private javax.swing.JButton executeButton;
    private javax.swing.ButtonGroup executionGroup;
    private javax.swing.JPanel executionParameters;
    private javax.swing.JPanel fileParameters;
    private javax.swing.JTextField inputFileTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> kValueComboBox;
    private javax.swing.JTextField nClustersTextField;
    private javax.swing.JTextField nthreadsTextField;
    private javax.swing.JPanel otherParameters;
    private javax.swing.JTextField outputFileTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField scratchFolderTextField;
    private javax.swing.JComboBox<String> separatorComboBox;
    private javax.swing.JCheckBox skipVisCheckBox;
    private javax.swing.JRadioButton sudoButton;
    private javax.swing.JTextField xValueCometTextField;
    // End of variables declaration//GEN-END:variables
}
