/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;

import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import java.util.Timer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import pkg4seqgui.MainFrame.MyTask;
import static pkg4seqgui.MainFrame.getPreferences;

/**
 *
 * @author beccuti
 */
public class HeatmapPanel extends javax.swing.JPanel {

    /**
     * Creates new form HeatmapPanel
     */
    public HeatmapPanel() {
        initComponents();
        //vRNAPanel
        MainFrame.contextMenu.add(HUpperRangeText);
        MainFrame.contextMenu.add(HLowerRangeText);
    }

    private static final long serialVersionUID = 5778212333L;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        heatmapGroup = new javax.swing.ButtonGroup();
        heatmapGroupLog = new javax.swing.ButtonGroup();
        heatmapBaseGroup = new javax.swing.ButtonGroup();
        Heatmappanel = new javax.swing.JPanel();
        jButton46 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        vCloseButton8 = new javax.swing.JButton();
        jPanel38 = new javax.swing.JPanel();
        HscratchText = new javax.swing.JTextField();
        jToggleButton42 = new javax.swing.JToggleButton();
        jToggleButton43 = new javax.swing.JToggleButton();
        jLabel131 = new javax.swing.JLabel();
        HdataFileText = new javax.swing.JTextField();
        jToggleButton44 = new javax.swing.JToggleButton();
        jToggleButton45 = new javax.swing.JToggleButton();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        HStatus1RadioButton = new javax.swing.JRadioButton();
        HStatus0RadioButton = new javax.swing.JRadioButton();
        jToggleButton46 = new javax.swing.JToggleButton();
        jToggleButton47 = new javax.swing.JToggleButton();
        HOutputFolderText = new javax.swing.JTextField();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        HLowerRangeText = new javax.swing.JTextField();
        jLabel136 = new javax.swing.JLabel();
        HUpperRangeText = new javax.swing.JTextField();
        jLabel139 = new javax.swing.JLabel();
        jPanel39 = new javax.swing.JPanel();
        jLabel130 = new javax.swing.JLabel();
        HSudoRadioButton = new javax.swing.JRadioButton();
        HDockerRadioButton = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        Heatmappanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "Heatmap generation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(51, 153, 255))); // NOI18N
        Heatmappanel.setLayout(new java.awt.GridBagLayout());

        jButton46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        jButton46.setText("Execute");
        jButton46.setToolTipText(null);
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        Heatmappanel.add(jButton46, gridBagConstraints);

        jButton48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        jButton48.setText("Reset");
        jButton48.setToolTipText(null);
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        Heatmappanel.add(jButton48, gridBagConstraints);

        vCloseButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        vCloseButton8.setText("Close");
        vCloseButton8.setToolTipText(null);
        vCloseButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vCloseButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        Heatmappanel.add(vCloseButton8, gridBagConstraints);

        jPanel38.setBackground(new java.awt.Color(248, 248, 248));
        jPanel38.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel38.setToolTipText(null);
        jPanel38.setLayout(new java.awt.GridBagLayout());

        HscratchText.setEditable(false);
        HscratchText.setToolTipText(null);
        HscratchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HscratchTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        jPanel38.add(HscratchText, gridBagConstraints);

        jToggleButton42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton42.setText("Browse");
        jToggleButton42.setToolTipText(null);
        jToggleButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton42ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jToggleButton42, gridBagConstraints);

        jToggleButton43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton43.setText("Cancel");
        jToggleButton43.setToolTipText(null);
        jToggleButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton43ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jToggleButton43, gridBagConstraints);

        jLabel131.setText("Output folder:");
        jLabel131.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jLabel131, gridBagConstraints);

        HdataFileText.setEditable(false);
        HdataFileText.setToolTipText(null);
        HdataFileText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HdataFileTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        jPanel38.add(HdataFileText, gridBagConstraints);

        jToggleButton44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        jToggleButton44.setText("Browse");
        jToggleButton44.setToolTipText(null);
        jToggleButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton44ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jToggleButton44, gridBagConstraints);

        jToggleButton45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton45.setText("Cancel");
        jToggleButton45.setToolTipText(null);
        jToggleButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton45ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jToggleButton45, gridBagConstraints);

        jLabel132.setText("Upper range:");
        jLabel132.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jLabel132, gridBagConstraints);

        jLabel133.setText("Input type:");
        jLabel133.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jLabel133, gridBagConstraints);

        HStatus1RadioButton.setBackground(new java.awt.Color(248, 248, 248));
        heatmapBaseGroup.add(HStatus1RadioButton);
        HStatus1RadioButton.setSelected(true);
        HStatus1RadioButton.setText("row count");
        HStatus1RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HStatus1RadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 45, 0, 10);
        jPanel38.add(HStatus1RadioButton, gridBagConstraints);

        HStatus0RadioButton.setBackground(new java.awt.Color(248, 248, 248));
        heatmapBaseGroup.add(HStatus0RadioButton);
        HStatus0RadioButton.setText("other");
        HStatus0RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HStatus0RadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel38.add(HStatus0RadioButton, gridBagConstraints);

        jToggleButton46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton46.setText("Browse");
        jToggleButton46.setToolTipText(null);
        jToggleButton46.setEnabled(false);
        jToggleButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton46ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jToggleButton46, gridBagConstraints);

        jToggleButton47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton47.setText("Cancel");
        jToggleButton47.setToolTipText(null);
        jToggleButton47.setEnabled(false);
        jToggleButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton47ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jToggleButton47, gridBagConstraints);

        HOutputFolderText.setEditable(false);
        HOutputFolderText.setToolTipText(null);
        HOutputFolderText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HOutputFolderTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        jPanel38.add(HOutputFolderText, gridBagConstraints);

        jLabel134.setText("Input file:");
        jLabel134.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jLabel134, gridBagConstraints);

        jLabel135.setText("Scratch folder:");
        jLabel135.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jLabel135, gridBagConstraints);

        HLowerRangeText.setText("-1");
        HLowerRangeText.setToolTipText(null);
        HLowerRangeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HLowerRangeTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        jPanel38.add(HLowerRangeText, gridBagConstraints);

        jLabel136.setText("Lower range:");
        jLabel136.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel38.add(jLabel136, gridBagConstraints);

        HUpperRangeText.setText("1");
        HUpperRangeText.setToolTipText(null);
        HUpperRangeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HUpperRangeTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        jPanel38.add(HUpperRangeText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 3.0;
        jPanel38.add(jLabel139, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        Heatmappanel.add(jPanel38, gridBagConstraints);

        jPanel39.setBackground(new java.awt.Color(248, 248, 248));
        jPanel39.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel39.setLayout(new java.awt.GridBagLayout());

        jLabel130.setText("Execution:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel39.add(jLabel130, gridBagConstraints);

        HSudoRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        heatmapGroup.add(HSudoRadioButton);
        HSudoRadioButton.setText("sudo");
        HSudoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HSudoRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 77, 10, 10);
        jPanel39.add(HSudoRadioButton, gridBagConstraints);

        HDockerRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        heatmapGroup.add(HDockerRadioButton);
        HDockerRadioButton.setSelected(true);
        HDockerRadioButton.setText("docker");
        HDockerRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HDockerRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel39.add(HDockerRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        Heatmappanel.add(jPanel39, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(Heatmappanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed

        if (HLowerRangeText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified the lower bound.","Error: lower bound",JOptionPane.ERROR_MESSAGE);
            //HLowerRangeText.requestFocusInWindow();
            return;
        }

        if (HUpperRangeText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified the upper bound.","Error: upper bound",JOptionPane.ERROR_MESSAGE);
            //HUpperRangeText.requestFocusInWindow();
            return;
        }

        try
        {
            Float x = Float.valueOf(HLowerRangeText.getText());
            Float y = Float.valueOf(HUpperRangeText.getText());
            if (x>=y){
                JOptionPane.showMessageDialog(this, "Upper bound must be greater than lower bound.","Error: bounds",JOptionPane.ERROR_MESSAGE);
                //HLowerRangeText.requestFocusInWindow();
                return;
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "You have to specified the number for the bounds.","Error: bound  number",JOptionPane.ERROR_MESSAGE);
            ///HLowerRangeText.requestFocusInWindow();
            return;
        }

        if (HdataFileText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an input file","Error: Data  input file ",JOptionPane.ERROR_MESSAGE);
        }
        else
        if (HscratchText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified a scratch folder","Error: scratch folder ",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            //execute code
            Runtime rt = Runtime.getRuntime();
            try{
                String[] cmd = {"/bin/bash","-c"," bash ./execHeatmap.sh "};
                if (HSudoRadioButton.isSelected()){
                    cmd[2]+= "group=\\\"sudo\\\"";
                }
                else{
                    cmd[2]+= "group=\\\"docker\\\"";
                }
                cmd[2]+= " file=\\\""+HdataFileText.getText()+"\\\"";
                cmd[2]+= " scratch.folder=\\\""+HscratchText.getText()+"\\\"";
                if (HStatus1RadioButton.isSelected()){
                    cmd[2]+= " status=1";
                }
                else{
                    cmd[2]+= " status=0";
                }
                cmd[2]+= " lower.range="+HLowerRangeText.getText()+" upper.range="+HUpperRangeText.getText();
                cmd[2]+=" "+HOutputFolderText.getText() +" >& "+HOutputFolderText.getText()+"/outputExecution ";

                if (MainFrame.listProcRunning.size()<MainFrame.GS.getMaxSizelistProcRunning()){
                    Process pr = rt.exec(cmd);
                    MainFrame.ElProcRunning tmp= new MainFrame.ElProcRunning("Heatmap  ", HOutputFolderText.getText(),pr,MainFrame.listModel.getSize());
                    MainFrame.listProcRunning.add(tmp);
                    java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/running.png");
                    ImageIcon image2 = new ImageIcon(imgURL);
                    MainFrame.GL.setAvoidProcListValueChanged(-1);
                    MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Running]   "+tmp.toString(),"Running",tmp.path, image2 ));
                    MainFrame.GL.setAvoidProcListValueChanged(0);
                    if(MainFrame.listProcRunning.size()==1){
                        MainFrame.t=new Timer();
                        MainFrame.t.scheduleAtFixedRate(new MyTask(), 5000, 5000);
                    }
                }
                else{
                    MainFrame.ElProcWaiting tmp= new MainFrame.ElProcWaiting("Heatmap", HOutputFolderText.getText(),cmd,MainFrame.listModel.getSize());
                    MainFrame.listProcWaiting.add(tmp);
                    java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/waiting.png");
                    ImageIcon image2 = new ImageIcon(imgURL);
                    MainFrame.GL.setAvoidProcListValueChanged(-1);
                    MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Waiting]   "+tmp.toString(),"Waiting",tmp.path,image2));
                    MainFrame.GL.setAvoidProcListValueChanged(0);
                }
                MainFrame.GL.setAvoidProcListValueChanged(-1);
                MainFrame.ProcList.setModel(MainFrame.listModel);
                MainFrame.ProcList.setCellRenderer(new MainFrame.ListEntryCellRenderer());
                MainFrame.GL.setAvoidProcListValueChanged(0);
            }
            catch(IOException e) {
                JOptionPane.showMessageDialog(this, e.toString(),"Error execution",JOptionPane.ERROR_MESSAGE);
                System.out.println(e.toString());
            }
            JOptionPane.showMessageDialog(this, "Heatmap task was scheduled","Confermation",JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
        HDockerRadioButton.setSelected(true);
        HOutputFolderText.setText("");
        HdataFileText.setText("");
        HscratchText.setText("");
        HLowerRangeText.setText("-1");
        HUpperRangeText.setText("1");
        HStatus1RadioButton.setSelected(true);
    }//GEN-LAST:event_jButton48ActionPerformed

    private void vCloseButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vCloseButton8ActionPerformed
        HDockerRadioButton.setSelected(true);
        HOutputFolderText.setText("");
        HStatus1RadioButton.setSelected(true);
        HdataFileText.setText("");
        HscratchText.setText("");
        HLowerRangeText.setText("-1");
        HUpperRangeText.setText("1");
        CardLayout card = (CardLayout)MainFrame.MainPanel.getLayout();
        card.show(MainFrame.MainPanel, "Empty");
        MainFrame.CurrentLayout="Empty";
    }//GEN-LAST:event_vCloseButton8ActionPerformed

    private void HscratchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HscratchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HscratchTextActionPerformed

    private void jToggleButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton42ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(HscratchText.getText().equals(""))){
            File file =new File(HscratchText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            HscratchText.setText(String.valueOf(f));
        }
        getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton42ActionPerformed

    private void jToggleButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton43ActionPerformed
        HscratchText.setText("");
    }//GEN-LAST:event_jToggleButton43ActionPerformed

    private void HdataFileTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HdataFileTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HdataFileTextActionPerformed

    private void jToggleButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton44ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(HdataFileText.getText().equals(""))){
            File file =new File(HOutputFolderText.getText());
            //file=  new File(file.getAbsolutePath());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            HdataFileText.setText(String.valueOf(f));
            HOutputFolderText.setText(openDir.getCurrentDirectory().getAbsolutePath());
        }
        getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton44ActionPerformed

    private void jToggleButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton45ActionPerformed
        HdataFileText.setText("");
        HOutputFolderText.setText("");
    }//GEN-LAST:event_jToggleButton45ActionPerformed

    private void HStatus1RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HStatus1RadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HStatus1RadioButtonActionPerformed

    private void HStatus0RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HStatus0RadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HStatus0RadioButtonActionPerformed

    private void jToggleButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton46ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton46ActionPerformed

    private void jToggleButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton47ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton47ActionPerformed

    private void HOutputFolderTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HOutputFolderTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HOutputFolderTextActionPerformed

    private void HLowerRangeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HLowerRangeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HLowerRangeTextActionPerformed

    private void HUpperRangeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HUpperRangeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HUpperRangeTextActionPerformed

    private void HSudoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HSudoRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HSudoRadioButtonActionPerformed

    private void HDockerRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HDockerRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HDockerRadioButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton HDockerRadioButton;
    private javax.swing.JTextField HLowerRangeText;
    private javax.swing.JTextField HOutputFolderText;
    private javax.swing.JRadioButton HStatus0RadioButton;
    private javax.swing.JRadioButton HStatus1RadioButton;
    private javax.swing.JRadioButton HSudoRadioButton;
    private javax.swing.JTextField HUpperRangeText;
    private javax.swing.JTextField HdataFileText;
    private javax.swing.JPanel Heatmappanel;
    private javax.swing.JTextField HscratchText;
    private javax.swing.ButtonGroup heatmapBaseGroup;
    private javax.swing.ButtonGroup heatmapGroup;
    private javax.swing.ButtonGroup heatmapGroupLog;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton48;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JToggleButton jToggleButton42;
    private javax.swing.JToggleButton jToggleButton43;
    private javax.swing.JToggleButton jToggleButton44;
    private javax.swing.JToggleButton jToggleButton45;
    private javax.swing.JToggleButton jToggleButton46;
    private javax.swing.JToggleButton jToggleButton47;
    private javax.swing.JButton vCloseButton8;
    // End of variables declaration//GEN-END:variables
}
