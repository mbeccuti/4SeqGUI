/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;
import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import java.util.Timer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static pkg4seqgui.IndexingStarRSEM.iDockerRadioButton;
import static pkg4seqgui.IndexingStarRSEM.iThreadText;
import pkg4seqgui.MainFrame.MyTask;
/**
 *
 * @author user
 */
public class IndexingBWAPanel extends javax.swing.JPanel {

    /**
     * Creates new form IndexingBWAPanel
     */
    public IndexingBWAPanel() {
        initComponents();
    }
    private static final long serialVersionUID = 57752123311L;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        GATK = new javax.swing.ButtonGroup();
        IExecutionBWA = new javax.swing.ButtonGroup();
        IndexingBWAPanel = new javax.swing.JPanel();
        iCloseButton1 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        iResetButton1 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        iGenomeFolderBText = new javax.swing.JTextField();
        jToggleButton18 = new javax.swing.JToggleButton();
        jToggleButton19 = new javax.swing.JToggleButton();
        jLabel46 = new javax.swing.JLabel();
        iGenomeURLBText = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        idbSPNText = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        iBTrueRadioButton = new javax.swing.JRadioButton();
        iBFalseRadioButton = new javax.swing.JRadioButton();
        i1000GenomeText = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        i1000BrowseButton = new javax.swing.JToggleButton();
        i1000CancelButton = new javax.swing.JToggleButton();
        idbSPNBrowseButton = new javax.swing.JToggleButton();
        idbSPNCancelButton = new javax.swing.JToggleButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        iSudoBRadioButton = new javax.swing.JRadioButton();
        iDockerBRadioButton = new javax.swing.JRadioButton();
        jLabel50 = new javax.swing.JLabel();
        iThreadBText = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        IndexingBWAPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "Genome indexing BWA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(0, 153, 153))); // NOI18N
        IndexingBWAPanel.setToolTipText("");
        IndexingBWAPanel.setLayout(new java.awt.GridBagLayout());

        iCloseButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        iCloseButton1.setText("Close");
        iCloseButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iCloseButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        IndexingBWAPanel.add(iCloseButton1, gridBagConstraints);

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        jButton21.setText("Execute");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        IndexingBWAPanel.add(jButton21, gridBagConstraints);

        iResetButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        iResetButton1.setText("Reset");
        iResetButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iResetButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        IndexingBWAPanel.add(iResetButton1, gridBagConstraints);

        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/86b.png"))); // NOI18N
        jButton22.setText("Save conf.");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        IndexingBWAPanel.add(jButton22, gridBagConstraints);

        jPanel15.setBackground(new java.awt.Color(247, 248, 248));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        jLabel37.setText("Genome  folder:");
        jLabel37.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(jLabel37, gridBagConstraints);

        iGenomeFolderBText.setEditable(false);
        iGenomeFolderBText.setToolTipText("The folder that will contain the indexed genome.");
        iGenomeFolderBText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iGenomeFolderBTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel15.add(iGenomeFolderBText, gridBagConstraints);

        jToggleButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton18.setText("Browse");
        jToggleButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(jToggleButton18, gridBagConstraints);

        jToggleButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton19.setText("Cancel");
        jToggleButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton19ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(jToggleButton19, gridBagConstraints);

        jLabel46.setText("USCS Genome url:");
        jLabel46.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(jLabel46, gridBagConstraints);

        iGenomeURLBText.setToolTipText("The URL which will be used to download the genome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel15.add(iGenomeURLBText, gridBagConstraints);

        jLabel48.setText("dbSNP VCF file:");
        jLabel48.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(jLabel48, gridBagConstraints);

        idbSPNText.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel15.add(idbSPNText, gridBagConstraints);

        jLabel51.setText("GATK:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(jLabel51, gridBagConstraints);

        iBTrueRadioButton.setBackground(new java.awt.Color(247, 248, 248));
        GATK.add(iBTrueRadioButton);
        iBTrueRadioButton.setText("True");
        iBTrueRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iBTrueRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel15.add(iBTrueRadioButton, gridBagConstraints);

        iBFalseRadioButton.setBackground(new java.awt.Color(247, 248, 248));
        GATK.add(iBFalseRadioButton);
        iBFalseRadioButton.setSelected(true);
        iBFalseRadioButton.setText("False");
        iBFalseRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                iBFalseRadioButtonStateChanged(evt);
            }
        });
        iBFalseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iBFalseRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(iBFalseRadioButton, gridBagConstraints);

        i1000GenomeText.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel15.add(i1000GenomeText, gridBagConstraints);

        jLabel52.setText("1000 Genome  VCF file:");
        jLabel52.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(jLabel52, gridBagConstraints);

        i1000BrowseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        i1000BrowseButton.setText("Browse");
        i1000BrowseButton.setEnabled(false);
        i1000BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i1000BrowseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(i1000BrowseButton, gridBagConstraints);

        i1000CancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        i1000CancelButton.setText("Cancel");
        i1000CancelButton.setEnabled(false);
        i1000CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i1000CancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(i1000CancelButton, gridBagConstraints);

        idbSPNBrowseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        idbSPNBrowseButton.setText("Browse");
        idbSPNBrowseButton.setEnabled(false);
        idbSPNBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idbSPNBrowseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(idbSPNBrowseButton, gridBagConstraints);

        idbSPNCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        idbSPNCancelButton.setText("Cancel");
        idbSPNCancelButton.setEnabled(false);
        idbSPNCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idbSPNCancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel15.add(idbSPNCancelButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        IndexingBWAPanel.add(jPanel15, gridBagConstraints);

        jPanel16.setBackground(new java.awt.Color(247, 248, 248));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel16.setLayout(new java.awt.GridBagLayout());

        jLabel49.setText("Execution:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel16.add(jLabel49, gridBagConstraints);

        iSudoBRadioButton.setBackground(new java.awt.Color(247, 248, 248));
        IExecutionBWA.add(iSudoBRadioButton);
        iSudoBRadioButton.setText("sudo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 70, 10, 10);
        jPanel16.add(iSudoBRadioButton, gridBagConstraints);

        iDockerBRadioButton.setBackground(new java.awt.Color(247, 248, 248));
        IExecutionBWA.add(iDockerBRadioButton);
        iDockerBRadioButton.setSelected(true);
        iDockerBRadioButton.setText("docker");
        iDockerBRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iDockerBRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel16.add(iDockerBRadioButton, gridBagConstraints);

        jLabel50.setText("Thread number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel16.add(jLabel50, gridBagConstraints);

        iThreadBText.setText("8");
        iThreadBText.setToolTipText("The number of threads which will be used during the computation.");
        iThreadBText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                iThreadBTextFocusLost(evt);
            }
        });
        iThreadBText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iThreadBTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 70, 10, 10);
        jPanel16.add(iThreadBText, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        IndexingBWAPanel.add(jPanel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(IndexingBWAPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void iCloseButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iCloseButton1ActionPerformed
        iBFalseRadioButton.setSelected(true);
        i1000GenomeText.setText("");
        idbSPNText.setText("");
        iGenomeFolderBText.setText("");
        iDockerRadioButton.setSelected(true);
        iGenomeURLBText.setText("");
        iThreadBText.setText(Integer.toString(MainFrame.GS.getDefaultThread()));
        CardLayout card = (CardLayout)MainFrame.MainPanel.getLayout();
        card.show(MainFrame.MainPanel, "Empty");
        MainFrame.CurrentLayout="Empty";
        // AnalysisTree.clearSelection();
    }//GEN-LAST:event_iCloseButton1ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        if (iGenomeFolderBText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an Genome folder","Error: Genome  folder",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        if (iGenomeURLBText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an Genome URL ","Error: Genome URL",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        if (iBTrueRadioButton.isSelected()&&(i1000GenomeText.getText().isEmpty())){
            JOptionPane.showMessageDialog(this, "You have to specified the 1000 Genome file  ","Error: 1000 Genome file",JOptionPane.ERROR_MESSAGE);
            return;
        }else
        if (iBTrueRadioButton.isSelected()&&(idbSPNText.getText().isEmpty())){
            JOptionPane.showMessageDialog(this, "You have to specified the dbSPN file  ","Error: dbSPN file",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
        if (iThreadBText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified the number of threads that will be used.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
            iThreadText.requestFocusInWindow();
            return;
        }
        try
        {
            Integer x = Integer.valueOf(iThreadBText.getText());
            if (x<=0){
                JOptionPane.showMessageDialog(this, "You have to specified a value greater than 0.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
                iThreadBText.requestFocusInWindow();
                return;
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "You have to specified the number of threads that will be used.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
            iThreadBText.requestFocusInWindow();
            return;
        }

        //execute code
        Runtime rt = Runtime.getRuntime();
        try{
            String[] cmd = {"/bin/bash","-c","  bash ./execIndexingBWA.sh "};
            if (iSudoBRadioButton.isSelected()){
                cmd[2]+= "group=\\\"sudo\\\"";
            }
            else{
                cmd[2]+= "group=\\\"docker\\\"";
            }
            cmd[2]+= " genome.folder=\\\""+iGenomeFolderBText.getText()+"\\\" uscs.urlgenome=\\\""+iGenomeURLBText.getText() +"\\\"";
            if (iBTrueRadioButton.isSelected()){
                cmd[2]+= " gatk=TRUE";
                cmd[2]+= " dbsnp.file=\\\""+idbSPNText.getText()+"\\\"  g1000.file=\\\""+i1000GenomeText.getText()+"\\\"";
            }
            else{
                cmd[2]+= " gatk=FALSE";
                cmd[2]+= " dbsnp.file=NULL  g1000.file=NULL";
            }

            cmd[2]+= " threads="+iThreadBText.getText()+ " "+iGenomeFolderBText.getText() + " >& "+iGenomeFolderBText.getText()+"/outputExecution ";
            //ProcessStatus.setText(pr.toString());
            if (MainFrame.listProcRunning.size()<MainFrame.GS.getMaxSizelistProcRunning()){
                Process pr = rt.exec(cmd);
                System.out.println("Runing PID:"+ MainFrame.getPidOfProcess(pr)+"\n");
                System.out.println(cmd[2]);
                MainFrame.ElProcRunning tmp= new MainFrame.ElProcRunning("Genome indexing BWA ", iGenomeFolderBText.getText(),pr,MainFrame.listModel.getSize());
                MainFrame.listProcRunning.add(tmp);
                java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/running.png");
                ImageIcon image2 = new ImageIcon(imgURL);
                MainFrame.GL.setAvoidProcListValueChanged(-1);
                MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Running]   "+tmp.toString(),"Running",tmp.path, image2 ));
                MainFrame.GL.setAvoidProcListValueChanged(0);
                if(MainFrame.listProcRunning.size()==1){
                    MainFrame.t=new Timer();
                    MainFrame.t.scheduleAtFixedRate(new MyTask(), 5000, 5000);
                }
            }
            else{
                MainFrame.ElProcWaiting tmp= new MainFrame.ElProcWaiting("Genome indexing BWA ",iGenomeFolderBText.getText(),cmd,MainFrame.listModel.getSize());
                MainFrame.listProcWaiting.add(tmp);
                java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/waiting.png");
                ImageIcon image2 = new ImageIcon(imgURL);
                MainFrame.GL.setAvoidProcListValueChanged(-1);
                MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Waiting]   "+tmp.toString(),"Waiting",tmp.path,image2));
                MainFrame.GL.setAvoidProcListValueChanged(0);
            }
            MainFrame.GL.setAvoidProcListValueChanged(-1);
            MainFrame.ProcList.setModel(MainFrame.listModel);
            MainFrame.ProcList.setCellRenderer(new MainFrame.ListEntryCellRenderer());
            MainFrame.GL.setAvoidProcListValueChanged(0);
        }
        catch(IOException e) {
            JOptionPane.showMessageDialog(this, e.toString(),"Error execution",JOptionPane.ERROR_MESSAGE);
            System.out.println(e.toString());
        }

        JOptionPane.showMessageDialog(this, "Genome indexing BWA task was scheduled","Confermation",JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jButton21ActionPerformed

    private void iResetButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iResetButton1ActionPerformed
        iBFalseRadioButton.setSelected(true);
        i1000GenomeText.setText("");
        idbSPNText.setText("");
        iGenomeFolderBText.setText("");
        iDockerRadioButton.setSelected(true);
        iGenomeURLBText.setText("");
        iThreadBText.setText(Integer.toString(MainFrame.GS.getDefaultThread()));
    }//GEN-LAST:event_iResetButton1ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        //saveAsMenuItemActionPerformed(evt);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void iGenomeFolderBTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iGenomeFolderBTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iGenomeFolderBTextActionPerformed

    private void jToggleButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton18ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(iGenomeFolderBText.getText().equals(""))){
            File file =new File(iGenomeFolderBText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            iGenomeFolderBText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton18ActionPerformed

    private void jToggleButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton19ActionPerformed
        iGenomeFolderBText.setText("");
    }//GEN-LAST:event_jToggleButton19ActionPerformed

    private void iBTrueRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iBTrueRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iBTrueRadioButtonActionPerformed

    private void iBFalseRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_iBFalseRadioButtonStateChanged
        if (iBFalseRadioButton.isSelected())
        {
            i1000BrowseButton.setEnabled(false);
            i1000CancelButton.setEnabled(false);
            idbSPNBrowseButton.setEnabled(false);
            idbSPNCancelButton.setEnabled(false);
        }
        else
        {
            i1000BrowseButton.setEnabled(true);
            i1000CancelButton.setEnabled(true);
            idbSPNBrowseButton.setEnabled(true);
            idbSPNCancelButton.setEnabled(true);
        }
    }//GEN-LAST:event_iBFalseRadioButtonStateChanged

    private void iBFalseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iBFalseRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iBFalseRadioButtonActionPerformed

    private void i1000BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i1000BrowseButtonActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(i1000GenomeText.getText().equals(""))){
            File file =new File(i1000GenomeText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            i1000GenomeText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_i1000BrowseButtonActionPerformed

    private void i1000CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i1000CancelButtonActionPerformed
        i1000GenomeText.setText("");
    }//GEN-LAST:event_i1000CancelButtonActionPerformed

    private void idbSPNBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idbSPNBrowseButtonActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(idbSPNText.getText().equals(""))){
            File file =new File(idbSPNText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            idbSPNText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_idbSPNBrowseButtonActionPerformed

    private void idbSPNCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idbSPNCancelButtonActionPerformed
        idbSPNText.setText("");
    }//GEN-LAST:event_idbSPNCancelButtonActionPerformed

    private void iDockerBRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iDockerBRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iDockerBRadioButtonActionPerformed

    private void iThreadBTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_iThreadBTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_iThreadBTextFocusLost

    private void iThreadBTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iThreadBTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iThreadBTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GATK;
    private javax.swing.ButtonGroup IExecutionBWA;
    private javax.swing.JPanel IndexingBWAPanel;
    private javax.swing.JToggleButton i1000BrowseButton;
    private javax.swing.JToggleButton i1000CancelButton;
    private javax.swing.JTextField i1000GenomeText;
    private javax.swing.JRadioButton iBFalseRadioButton;
    private javax.swing.JRadioButton iBTrueRadioButton;
    private javax.swing.JButton iCloseButton1;
    private javax.swing.JRadioButton iDockerBRadioButton;
    private javax.swing.JTextField iGenomeFolderBText;
    public static javax.swing.JTextField iGenomeURLBText;
    private javax.swing.JButton iResetButton1;
    private javax.swing.JRadioButton iSudoBRadioButton;
    public static javax.swing.JTextField iThreadBText;
    private javax.swing.JToggleButton idbSPNBrowseButton;
    private javax.swing.JToggleButton idbSPNCancelButton;
    private javax.swing.JTextField idbSPNText;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JToggleButton jToggleButton18;
    private javax.swing.JToggleButton jToggleButton19;
    // End of variables declaration//GEN-END:variables
}
