/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;

import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import java.util.Timer;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static pkg4seqgui.MainFrame.contextMenu;
import static pkg4seqgui.MainFrame.getPreferences;

/**
 *
 * @author beccuti
 */
public class CountingSalmon extends javax.swing.JPanel {

    /**
     * Creates new form CountingSalmon
     */
    public CountingSalmon() {
        initComponents();
        contextMenu.add(cThreadText);
        contextMenu.add(cAdapter5Text);
        contextMenu.add(cAdapter3Text);
        contextMenu.add(cMinLengthText);
    }
    
    private static final long serialVersionUID = 5778212333L;
    
        private static final Pattern adapter = Pattern.compile("[acgtACGT]+");
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        cStrand = new javax.swing.ButtonGroup();
        cSeq = new javax.swing.ButtonGroup();
        cExecutiionSalmon = new javax.swing.ButtonGroup();
        CountingSalmonPanel = new javax.swing.JPanel();
        vCloseButton5 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        jLabel110 = new javax.swing.JLabel();
        cFastQFolderText = new javax.swing.JTextField();
        jToggleButton32 = new javax.swing.JToggleButton();
        jToggleButton33 = new javax.swing.JToggleButton();
        jLabel111 = new javax.swing.JLabel();
        cOutputFolderText = new javax.swing.JTextField();
        jToggleButton34 = new javax.swing.JToggleButton();
        jToggleButton35 = new javax.swing.JToggleButton();
        jLabel112 = new javax.swing.JLabel();
        cGenomeFolderText = new javax.swing.JTextField();
        jToggleButton36 = new javax.swing.JToggleButton();
        jToggleButton37 = new javax.swing.JToggleButton();
        jPanel31 = new javax.swing.JPanel();
        jLabel113 = new javax.swing.JLabel();
        cSudoRadioButton = new javax.swing.JRadioButton();
        cDockerRadioButton = new javax.swing.JRadioButton();
        jLabel114 = new javax.swing.JLabel();
        cThreadText = new javax.swing.JTextField();
        jPanel32 = new javax.swing.JPanel();
        cAdapter5Text = new javax.swing.JTextField();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        cAdapter3Text = new javax.swing.JTextField();
        cPeRadioButton = new javax.swing.JRadioButton();
        cSeRadioButton = new javax.swing.JRadioButton();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        cMinLengthText = new javax.swing.JTextField();
        jLabel119 = new javax.swing.JLabel();
        cSNoneRadioButton = new javax.swing.JRadioButton();
        cSForwardRadioButton = new javax.swing.JRadioButton();
        cSReverseRadioButton = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        CountingSalmonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "Transcripts and genes counting with Salmon ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(255, 102, 102))); // NOI18N
        CountingSalmonPanel.setToolTipText(null);
        CountingSalmonPanel.setLayout(new java.awt.GridBagLayout());

        vCloseButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        vCloseButton5.setText("Close");
        vCloseButton5.setToolTipText(null);
        vCloseButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vCloseButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        CountingSalmonPanel.add(vCloseButton5, gridBagConstraints);

        jButton39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        jButton39.setText("Execute");
        jButton39.setToolTipText(null);
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        CountingSalmonPanel.add(jButton39, gridBagConstraints);

        jButton40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        jButton40.setText("Reset");
        jButton40.setToolTipText(null);
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        CountingSalmonPanel.add(jButton40, gridBagConstraints);

        jButton41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/86b.png"))); // NOI18N
        jButton41.setText("Save conf.");
        jButton41.setToolTipText(null);
        jButton41.setEnabled(false);
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        CountingSalmonPanel.add(jButton41, gridBagConstraints);

        jPanel30.setBackground(new java.awt.Color(248, 248, 248));
        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel30.setToolTipText(null);
        jPanel30.setLayout(new java.awt.GridBagLayout());

        jLabel110.setText("FastQ  folder:");
        jLabel110.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel110, gridBagConstraints);

        cFastQFolderText.setEditable(false);
        cFastQFolderText.setToolTipText("The folder containing the input reads in FastQ format.");
        cFastQFolderText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cFastQFolderTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel30.add(cFastQFolderText, gridBagConstraints);

        jToggleButton32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton32.setText("Browse");
        jToggleButton32.setToolTipText(null);
        jToggleButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton32ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jToggleButton32, gridBagConstraints);

        jToggleButton33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton33.setText("Cancel");
        jToggleButton33.setToolTipText(null);
        jToggleButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton33ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jToggleButton33, gridBagConstraints);

        jLabel111.setText("Scratch folder:");
        jLabel111.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel111, gridBagConstraints);

        cOutputFolderText.setEditable(false);
        cOutputFolderText.setToolTipText("This folder will be mounted in the docker container.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel30.add(cOutputFolderText, gridBagConstraints);

        jToggleButton34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton34.setText("Browse");
        jToggleButton34.setToolTipText(null);
        jToggleButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton34ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jToggleButton34, gridBagConstraints);

        jToggleButton35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton35.setText("Cancel");
        jToggleButton35.setToolTipText(null);
        jToggleButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton35ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jToggleButton35, gridBagConstraints);

        jLabel112.setText("Genome folder:");
        jLabel112.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.6;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jLabel112, gridBagConstraints);

        cGenomeFolderText.setEditable(false);
        cGenomeFolderText.setToolTipText("The folder containing the indexed genome.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel30.add(cGenomeFolderText, gridBagConstraints);

        jToggleButton36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton36.setText("Browse");
        jToggleButton36.setToolTipText(null);
        jToggleButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton36ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jToggleButton36, gridBagConstraints);

        jToggleButton37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton37.setText("Cancel");
        jToggleButton37.setToolTipText(null);
        jToggleButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton37ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel30.add(jToggleButton37, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        CountingSalmonPanel.add(jPanel30, gridBagConstraints);

        jPanel31.setBackground(new java.awt.Color(248, 248, 248));
        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel31.setToolTipText(null);
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jLabel113.setText("Execution:");
        jLabel113.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel31.add(jLabel113, gridBagConstraints);

        cSudoRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        cExecutiionSalmon.add(cSudoRadioButton);
        cSudoRadioButton.setText("sudo");
        cSudoRadioButton.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel31.add(cSudoRadioButton, gridBagConstraints);

        cDockerRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        cExecutiionSalmon.add(cDockerRadioButton);
        cDockerRadioButton.setSelected(true);
        cDockerRadioButton.setText("docker");
        cDockerRadioButton.setToolTipText(null);
        cDockerRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cDockerRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel31.add(cDockerRadioButton, gridBagConstraints);

        jLabel114.setText("Thread number:");
        jLabel114.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel31.add(jLabel114, gridBagConstraints);

        cThreadText.setText("8");
        cThreadText.setToolTipText("The number of threads which will be used during the computation.");
        cThreadText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cThreadTextFocusLost(evt);
            }
        });
        cThreadText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cThreadTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel31.add(cThreadText, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        CountingSalmonPanel.add(jPanel31, gridBagConstraints);

        jPanel32.setBackground(new java.awt.Color(248, 248, 248));
        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel32.setToolTipText(null);
        jPanel32.setLayout(new java.awt.GridBagLayout());

        cAdapter5Text.setToolTipText(null);
        cAdapter5Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cAdapter5TextFocusLost(evt);
            }
        });
        cAdapter5Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cAdapter5TextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(cAdapter5Text, gridBagConstraints);

        jLabel115.setText("Adapter 5':");
        jLabel115.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(jLabel115, gridBagConstraints);

        jLabel116.setText("Adapter 3':");
        jLabel116.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(jLabel116, gridBagConstraints);

        cAdapter3Text.setToolTipText(null);
        cAdapter3Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cAdapter3TextFocusLost(evt);
            }
        });
        cAdapter3Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cAdapter3TextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(cAdapter3Text, gridBagConstraints);

        cPeRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        cSeq.add(cPeRadioButton);
        cPeRadioButton.setSelected(true);
        cPeRadioButton.setText("paired-end");
        cPeRadioButton.setToolTipText(null);
        cPeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cPeRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(cPeRadioButton, gridBagConstraints);

        cSeRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        cSeq.add(cSeRadioButton);
        cSeRadioButton.setText("single-end");
        cSeRadioButton.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(cSeRadioButton, gridBagConstraints);

        jLabel117.setText("Type of Sequence");
        jLabel117.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(jLabel117, gridBagConstraints);

        jLabel118.setText("Min length:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(jLabel118, gridBagConstraints);

        cMinLengthText.setText("40");
        cMinLengthText.setToolTipText(null);
        cMinLengthText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cMinLengthTextFocusLost(evt);
            }
        });
        cMinLengthText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cMinLengthTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(cMinLengthText, gridBagConstraints);

        jLabel119.setText("Strandness:");
        jLabel119.setToolTipText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(jLabel119, gridBagConstraints);

        cSNoneRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        cStrand.add(cSNoneRadioButton);
        cSNoneRadioButton.setSelected(true);
        cSNoneRadioButton.setText("none");
        cSNoneRadioButton.setToolTipText(null);
        cSNoneRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSNoneRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(cSNoneRadioButton, gridBagConstraints);

        cSForwardRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        cStrand.add(cSForwardRadioButton);
        cSForwardRadioButton.setText("forward");
        cSForwardRadioButton.setToolTipText(null);
        cSForwardRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSForwardRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(cSForwardRadioButton, gridBagConstraints);

        cSReverseRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        cStrand.add(cSReverseRadioButton);
        cSReverseRadioButton.setText("reverse");
        cSReverseRadioButton.setToolTipText(null);
        cSReverseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSReverseRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel32.add(cSReverseRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        CountingSalmonPanel.add(jPanel32, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(CountingSalmonPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void vCloseButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vCloseButton5ActionPerformed
        //RESET FIELDS
        cDockerRadioButton.setSelected(true);
        cFastQFolderText.setText("");
        cOutputFolderText.setText("");
        cThreadText.setText(Integer.toString(MainFrame.GS.getDefaultThread()));
        cAdapter5Text.setText(MainFrame.GS.getDefaultAdapter5());
        cAdapter3Text.setText(MainFrame.GS.getDefaultAdapter3());
        cSeRadioButton.setSelected(true);
        cMinLengthText.setText("40");
        cGenomeFolderText.setText("");
        cSNoneRadioButton.setSelected(true);
        //RESET FIELDS
        CardLayout card = (CardLayout)MainFrame.MainPanel.getLayout();
        card.show(MainFrame.MainPanel, "Empty");
        MainFrame.CurrentLayout="Empty";
        //GL.setAvoidProcListValueChanged(-1);
        //        AnalysisTree.clearSelection();
    }//GEN-LAST:event_vCloseButton5ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed

        //Field check

        if (cFastQFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an input folder","Error: FastQ  folder",JOptionPane.ERROR_MESSAGE);
            //vFastQFolderText.requestFocusInWindow();
            return;
        }
        else
        if (cOutputFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an output folder","Error: Output folder",JOptionPane.ERROR_MESSAGE);
            //vOutputFolderText.requestFocusInWindow();
            return;
        }
        else
        if (cGenomeFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an genome folder","Error: Genome folder",JOptionPane.ERROR_MESSAGE);
            //vGenomeFolderText.requestFocusInWindow();
            return;
        }
        else
        if (cThreadText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified the number of threads that will be used.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
            cThreadText.requestFocusInWindow();
            return;
        }
        try
        {
            Integer x = Integer.valueOf(cThreadText.getText());
            if (x<=0){
                JOptionPane.showMessageDialog(this, "You have to specified a value greater than 0.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
                cThreadText.requestFocusInWindow();
                return;
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "You have to specified the number of threads that will be used.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
            cThreadText.requestFocusInWindow();
            return;
        }

        if ((!cAdapter5Text.getText().isEmpty())&&(!adapter.matcher(cAdapter5Text.getText()).matches())){
            JOptionPane.showMessageDialog(this, "The specified Adapter format is not valid.","Error: Adapter 5'",JOptionPane.ERROR_MESSAGE);
            cAdapter5Text.requestFocusInWindow();
        }
        else{
            if ((!cAdapter3Text.getText().isEmpty())&&(!adapter.matcher(cAdapter3Text.getText()).matches())){
                JOptionPane.showMessageDialog(this, "The specified Adapter format is not valid.","Error: Adapter 3'",JOptionPane.ERROR_MESSAGE);
                cAdapter3Text.requestFocusInWindow();
            }
            else{
                if (cMinLengthText.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "You have to specified a value for the minimum lenght.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                    cMinLengthText.requestFocusInWindow();
                    return;
                }
                try{
                    Integer x = Integer.valueOf(cMinLengthText.getText());
                    if (x<0){
                        JOptionPane.showMessageDialog(this, "You have to specified a positive value.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                        cMinLengthText.requestFocusInWindow();
                        return;
                    }
                }
                catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "You have to specified a positive value.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                    cMinLengthText.requestFocusInWindow();
                    return;
                }

                //execute code
                Runtime rt = Runtime.getRuntime();
                try{
                    String[] cmd = {"/bin/bash","-c"," bash ./execSalmon.sh "};

                    if (cSudoRadioButton.isSelected()){
                        cmd[2]+= "group=\\\"sudo\\\"";
                    }
                    else{
                        cmd[2]+= "group=\\\"docker\\\"";
                    }
                    cmd[2]+= " fastq.folder=\\\""+cFastQFolderText.getText()+"\\\" scratch.folder=\\\""+cOutputFolderText.getText()+"\\\" adapter5=\\\""+cAdapter5Text.getText()+"\\\" adapter3=\\\""+cAdapter3Text.getText()+"\\\"";

                    if (cPeRadioButton.isSelected()){
                        cmd[2]+= " seq.type=\\\"pe\\\"";
                    }
                    else{
                        cmd[2]+= " seq.type=\\\"se\\\"";
                    }
                    cmd[2]+= " threads="+cThreadText.getText()+" min.length="+cMinLengthText.getText()+"  index.folder=\\\""+cGenomeFolderText.getText()+"\\\"";

                    if (cSNoneRadioButton.isSelected())
                    cmd[2]+= " strandness=\\\"none\\\"";
                    else
                    if (cSForwardRadioButton.isSelected())
                    cmd[2]+= " strandness=\\\"forward\\\"";
                    else
                    cmd[2]+= " strandness=\\\"reverse\\\"";

                    cmd[2]+=" "+cFastQFolderText.getText() +" >& "+cFastQFolderText.getText()+"/outputExecution ";

                    //ProcessStatus.setText(pr.toString());
                    if (MainFrame.listProcRunning.size()<MainFrame.GS.getMaxSizelistProcRunning()){
                        Process pr = rt.exec(cmd);
                        MainFrame.ElProcRunning tmp= new MainFrame.ElProcRunning("Transcripts and genes counting with Salmon ", cFastQFolderText.getText(),pr,MainFrame.listModel.getSize());
                        MainFrame.listProcRunning.add(tmp);
                        java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/running.png");
                        ImageIcon image2 = new ImageIcon(imgURL);
                        MainFrame.GL.setAvoidProcListValueChanged(-1);
                        MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Running]   "+tmp.toString(),"Running",tmp.path, image2 ));
                        MainFrame.GL.setAvoidProcListValueChanged(0);
                        //addElement("RNAseq counting workflow (data input: "+vFastQFolderText.getText()+")            [Runnig]");
                        if(MainFrame.listProcRunning.size()==1){
                            MainFrame.t=new Timer();
                            MainFrame.t.scheduleAtFixedRate(new MainFrame.MyTask(), 5000, 5000);
                        }
                    }
                    else{
                        MainFrame.ElProcWaiting tmp= new MainFrame.ElProcWaiting("Transcripts and genes counting with Salmon ",cFastQFolderText.getText(),cmd,MainFrame.listModel.getSize());
                        MainFrame.listProcWaiting.add(tmp);
                        java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/waiting.png");
                        ImageIcon image2 = new ImageIcon(imgURL);
                        MainFrame.GL.setAvoidProcListValueChanged(-1);
                        MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Waiting]   "+tmp.toString(),"Waiting",tmp.path,image2));
                        MainFrame.GL.setAvoidProcListValueChanged(0);
                    }
                    MainFrame.GL.setAvoidProcListValueChanged(-1);
                    MainFrame.ProcList.setModel(MainFrame.listModel);
                    MainFrame.ProcList.setCellRenderer(new MainFrame.ListEntryCellRenderer());
                    MainFrame.GL.setAvoidProcListValueChanged(0);
                }
                catch(IOException e) {
                    JOptionPane.showMessageDialog(this, e.toString(),"Error execution",JOptionPane.ERROR_MESSAGE);
                    System.out.println(e.toString());
                }
                JOptionPane.showMessageDialog(this, "Transcripts and genes counting Salmon task was scheduled","Confermation",JOptionPane.INFORMATION_MESSAGE);
            }
            //execute code
        }
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        cDockerRadioButton.setSelected(true);
        cFastQFolderText.setText("");
        cOutputFolderText.setText("");
        cThreadText.setText(Integer.toString(MainFrame.GS.getDefaultThread()));
        cAdapter5Text.setText(MainFrame.GS.getDefaultAdapter5());
        cAdapter3Text.setText(MainFrame.GS.getDefaultAdapter3());
        cSeRadioButton.setSelected(true);
        cMinLengthText.setText("40");
        cGenomeFolderText.setText("");
        cSNoneRadioButton.setSelected(true);
        cPeRadioButton.setSelected(true);
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        //saveAsMenuItemActionPerformed(evt);
    }//GEN-LAST:event_jButton41ActionPerformed

    private void cFastQFolderTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cFastQFolderTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cFastQFolderTextActionPerformed

    private void jToggleButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton32ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(cFastQFolderText.getText().equals(""))){
            File file =new File(cFastQFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            cFastQFolderText.setText(String.valueOf(f));
        }
        getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton32ActionPerformed

    private void jToggleButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton33ActionPerformed
        cFastQFolderText.setText("");
    }//GEN-LAST:event_jToggleButton33ActionPerformed

    private void jToggleButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton34ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(cOutputFolderText.getText().equals(""))){
            File file =new File(cOutputFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            cOutputFolderText.setText(String.valueOf(f));
        }
        getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton34ActionPerformed

    private void jToggleButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton35ActionPerformed
        cOutputFolderText.setText("");
    }//GEN-LAST:event_jToggleButton35ActionPerformed

    private void jToggleButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton36ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(cGenomeFolderText.getText().equals(""))){
            File file =new File(cGenomeFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            cGenomeFolderText.setText(String.valueOf(f));
        }
        getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton36ActionPerformed

    private void jToggleButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton37ActionPerformed
        cGenomeFolderText.setText("");
    }//GEN-LAST:event_jToggleButton37ActionPerformed

    private void cDockerRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cDockerRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cDockerRadioButtonActionPerformed

    private void cThreadTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cThreadTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cThreadTextFocusLost

    private void cThreadTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cThreadTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cThreadTextActionPerformed

    private void cAdapter5TextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cAdapter5TextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cAdapter5TextFocusLost

    private void cAdapter5TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAdapter5TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cAdapter5TextActionPerformed

    private void cAdapter3TextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cAdapter3TextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cAdapter3TextFocusLost

    private void cAdapter3TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAdapter3TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cAdapter3TextActionPerformed

    private void cPeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cPeRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cPeRadioButtonActionPerformed

    private void cMinLengthTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cMinLengthTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cMinLengthTextFocusLost

    private void cMinLengthTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cMinLengthTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cMinLengthTextActionPerformed

    private void cSNoneRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSNoneRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cSNoneRadioButtonActionPerformed

    private void cSForwardRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSForwardRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cSForwardRadioButtonActionPerformed

    private void cSReverseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSReverseRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cSReverseRadioButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CountingSalmonPanel;
    public static javax.swing.JTextField cAdapter3Text;
    public static javax.swing.JTextField cAdapter5Text;
    private javax.swing.JRadioButton cDockerRadioButton;
    private javax.swing.ButtonGroup cExecutiionSalmon;
    private javax.swing.JTextField cFastQFolderText;
    private javax.swing.JTextField cGenomeFolderText;
    private javax.swing.JTextField cMinLengthText;
    private javax.swing.JTextField cOutputFolderText;
    private javax.swing.JRadioButton cPeRadioButton;
    private javax.swing.JRadioButton cSForwardRadioButton;
    private javax.swing.JRadioButton cSNoneRadioButton;
    private javax.swing.JRadioButton cSReverseRadioButton;
    private javax.swing.JRadioButton cSeRadioButton;
    private javax.swing.ButtonGroup cSeq;
    private javax.swing.ButtonGroup cStrand;
    private javax.swing.JRadioButton cSudoRadioButton;
    public static javax.swing.JTextField cThreadText;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JToggleButton jToggleButton32;
    private javax.swing.JToggleButton jToggleButton33;
    private javax.swing.JToggleButton jToggleButton34;
    private javax.swing.JToggleButton jToggleButton35;
    private javax.swing.JToggleButton jToggleButton36;
    private javax.swing.JToggleButton jToggleButton37;
    private javax.swing.JButton vCloseButton5;
    // End of variables declaration//GEN-END:variables
}
