/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;
import java.awt.CardLayout;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.Timer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author user
 */
public class VmRNA extends javax.swing.JPanel {

    /**
     * Creates new form VmRNA
     */
    public VmRNA() {
        initComponents();
    }
    private static final long serialVersionUID = 5772212533L;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        vExecution = new javax.swing.ButtonGroup();
        vSeq = new javax.swing.ButtonGroup();
        Strand = new javax.swing.ButtonGroup();
        Annotation = new javax.swing.ButtonGroup();
        vmRNAPanel = new javax.swing.JPanel();
        vCloseButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        vFastQFolderText = new javax.swing.JTextField();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        vOutputFolderText = new javax.swing.JTextField();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jLabel9 = new javax.swing.JLabel();
        vGenomeFolderText = new javax.swing.JTextField();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        vSudoRadioButton = new javax.swing.JRadioButton();
        vDockerRadioButton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        vThreadText = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        vAdapter5Text = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        vAdapter3Text = new javax.swing.JTextField();
        vPeRadioButton = new javax.swing.JRadioButton();
        vSeRadioButton = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        vMinLengthText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        vSNoneRadioButton = new javax.swing.JRadioButton();
        vSForwardRadioButton = new javax.swing.JRadioButton();
        vSReverseRadioButton = new javax.swing.JRadioButton();
        vOrganismText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        vBAMyesRadioButton = new javax.swing.JRadioButton();
        vBAMnoLRadioButton = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        vmRNAPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "Genes, isoforms counting RSEM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(0, 102, 102))); // NOI18N
        vmRNAPanel.setToolTipText("");
        vmRNAPanel.setLayout(new java.awt.GridBagLayout());

        vCloseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        vCloseButton.setText("Close");
        vCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vCloseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        vmRNAPanel.add(vCloseButton, gridBagConstraints);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        jButton4.setText("Execute");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        vmRNAPanel.add(jButton4, gridBagConstraints);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        jButton5.setText("Reset");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        vmRNAPanel.add(jButton5, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/86b.png"))); // NOI18N
        jButton3.setText("Save conf.");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        vmRNAPanel.add(jButton3, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(248, 248, 248));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("FastQ  folder:");
        jLabel2.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel2, gridBagConstraints);

        vFastQFolderText.setEditable(false);
        vFastQFolderText.setToolTipText("The folder containing the input reads in FastQ format.");
        vFastQFolderText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vFastQFolderTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel2.add(vFastQFolderText, gridBagConstraints);

        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton2.setText("Browse");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jToggleButton2, gridBagConstraints);

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton1.setText("Cancel");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jToggleButton1, gridBagConstraints);

        jLabel3.setText("Scratch folder:");
        jLabel3.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel3, gridBagConstraints);

        vOutputFolderText.setEditable(false);
        vOutputFolderText.setToolTipText("This folder will be mounted in the docker container.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel2.add(vOutputFolderText, gridBagConstraints);

        jToggleButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton4.setText("Browse");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jToggleButton4, gridBagConstraints);

        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton3.setText("Cancel");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jToggleButton3, gridBagConstraints);

        jLabel9.setText("Genome folder:");
        jLabel9.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.6;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel9, gridBagConstraints);

        vGenomeFolderText.setEditable(false);
        vGenomeFolderText.setToolTipText("The folder containing the indexed genome.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel2.add(vGenomeFolderText, gridBagConstraints);

        jToggleButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        jToggleButton5.setText("Browse");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jToggleButton5, gridBagConstraints);

        jToggleButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        jToggleButton6.setText("Cancel");
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jToggleButton6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        vmRNAPanel.add(jPanel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(248, 248, 248));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Execution:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel3.add(jLabel1, gridBagConstraints);

        vSudoRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        vExecution.add(vSudoRadioButton);
        vSudoRadioButton.setText("sudo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel3.add(vSudoRadioButton, gridBagConstraints);

        vDockerRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        vExecution.add(vDockerRadioButton);
        vDockerRadioButton.setSelected(true);
        vDockerRadioButton.setText("docker");
        vDockerRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vDockerRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel3.add(vDockerRadioButton, gridBagConstraints);

        jLabel4.setText("Thread number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel3.add(jLabel4, gridBagConstraints);

        vThreadText.setText("8");
        vThreadText.setToolTipText("The number of threads which will be used during the computation.");
        vThreadText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vThreadTextFocusLost(evt);
            }
        });
        vThreadText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vThreadTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 28, 10, 10);
        jPanel3.add(vThreadText, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        vmRNAPanel.add(jPanel3, gridBagConstraints);

        jPanel6.setBackground(new java.awt.Color(248, 248, 248));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        vAdapter5Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vAdapter5TextFocusLost(evt);
            }
        });
        vAdapter5Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vAdapter5TextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vAdapter5Text, gridBagConstraints);

        jLabel5.setText("Adapter 5':");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Adapter 3':");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(jLabel6, gridBagConstraints);

        vAdapter3Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vAdapter3TextFocusLost(evt);
            }
        });
        vAdapter3Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vAdapter3TextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vAdapter3Text, gridBagConstraints);

        vPeRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        vSeq.add(vPeRadioButton);
        vPeRadioButton.setSelected(true);
        vPeRadioButton.setText("paired-end");
        vPeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vPeRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vPeRadioButton, gridBagConstraints);

        vSeRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        vSeq.add(vSeRadioButton);
        vSeRadioButton.setText("single-end");
        vSeRadioButton.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vSeRadioButton, gridBagConstraints);

        jLabel7.setText("Type of Sequence");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Min length:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(jLabel8, gridBagConstraints);

        vMinLengthText.setText("40");
        vMinLengthText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vMinLengthTextFocusLost(evt);
            }
        });
        vMinLengthText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vMinLengthTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vMinLengthText, gridBagConstraints);

        jLabel10.setText("Strandness:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(jLabel10, gridBagConstraints);

        vSNoneRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        Strand.add(vSNoneRadioButton);
        vSNoneRadioButton.setSelected(true);
        vSNoneRadioButton.setText("none");
        vSNoneRadioButton.setToolTipText("");
        vSNoneRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vSNoneRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vSNoneRadioButton, gridBagConstraints);

        vSForwardRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        Strand.add(vSForwardRadioButton);
        vSForwardRadioButton.setText("forward");
        vSForwardRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vSForwardRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vSForwardRadioButton, gridBagConstraints);

        vSReverseRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        Strand.add(vSReverseRadioButton);
        vSReverseRadioButton.setText("reverse");
        vSReverseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vSReverseRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vSReverseRadioButton, gridBagConstraints);

        vOrganismText.setText("hg38");
        vOrganismText.setToolTipText("");
        vOrganismText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vOrganismTextFocusLost(evt);
            }
        });
        vOrganismText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vOrganismTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vOrganismText, gridBagConstraints);

        jLabel11.setText("Organism:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(jLabel11, gridBagConstraints);

        jLabel13.setText("Save alignments:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(jLabel13, gridBagConstraints);

        vBAMyesRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        Annotation.add(vBAMyesRadioButton);
        vBAMyesRadioButton.setText("Yes");
        vBAMyesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vBAMyesRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vBAMyesRadioButton, gridBagConstraints);

        vBAMnoLRadioButton.setBackground(new java.awt.Color(248, 248, 248));
        Annotation.add(vBAMnoLRadioButton);
        vBAMnoLRadioButton.setSelected(true);
        vBAMnoLRadioButton.setText("No");
        vBAMnoLRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vBAMnoLRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(vBAMnoLRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        vmRNAPanel.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(vmRNAPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void vCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vCloseButtonActionPerformed

        //RESET FIELDS
        vDockerRadioButton.setSelected(true);
        vFastQFolderText.setText("");
        vOutputFolderText.setText("");
        vThreadText.setText(Integer.toString(MainFrame.GS.getDefaultThread()));
        vAdapter5Text.setText(MainFrame.GS.getDefaultAdapter5());
        vAdapter3Text.setText(MainFrame.GS.getDefaultAdapter3());
        vSeRadioButton.setSelected(true);
        vMinLengthText.setText("40");
        vGenomeFolderText.setText("");
        vSNoneRadioButton.setSelected(true);
        vOrganismText.setText("hg38");
        vBAMyesRadioButton.setSelected(true);
        //RESET FIELDS
        CardLayout card = (CardLayout)MainFrame.MainPanel.getLayout();
        card.show(MainFrame.MainPanel, "Empty");
        MainFrame.CurrentLayout="Empty";
        //GL.setAvoidProcListValueChanged(-1);
        // AnalysisTree.clearSelection();
    }//GEN-LAST:event_vCloseButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        //Field check

        if (vFastQFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an input folder","Error: FastQ  folder",JOptionPane.ERROR_MESSAGE);
            //vFastQFolderText.requestFocusInWindow();
            return;
        }
        else
        if (vOutputFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an output folder","Error: Output folder",JOptionPane.ERROR_MESSAGE);
            //vOutputFolderText.requestFocusInWindow();
            return;
        }
        else
        if (vGenomeFolderText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified an genome folder","Error: Genome folder",JOptionPane.ERROR_MESSAGE);
            //vGenomeFolderText.requestFocusInWindow();
            return;
        }
        else
        if (vThreadText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to specified the number of threads that will be used.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
            vThreadText.requestFocusInWindow();
            return;
        }
        try
        {
            Integer x = Integer.valueOf(vThreadText.getText());
            if (x<=0){
                JOptionPane.showMessageDialog(this, "You have to specified a value greater than 0.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
                vThreadText.requestFocusInWindow();
                return;
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "You have to specified the number of threads that will be used.","Error: Thread  number",JOptionPane.ERROR_MESSAGE);
            vThreadText.requestFocusInWindow();
            return;
        }

        if ((!vAdapter5Text.getText().isEmpty())&&(!MainFrame.adapter.matcher(vAdapter5Text.getText()).matches())){
            JOptionPane.showMessageDialog(this, "The specified Adapter format is not valid.","Error: Adapter 5'",JOptionPane.ERROR_MESSAGE);
            vAdapter5Text.requestFocusInWindow();
        }
        else{
            if ((!vAdapter3Text.getText().isEmpty())&&(!MainFrame.adapter.matcher(vAdapter3Text.getText()).matches())){
                JOptionPane.showMessageDialog(this, "The specified Adapter format is not valid.","Error: Adapter 3'",JOptionPane.ERROR_MESSAGE);
                vAdapter3Text.requestFocusInWindow();
            }
            else{
                if (vMinLengthText.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "You have to specified a value for the minimum lenght.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                    vMinLengthText.requestFocusInWindow();
                    return;
                }
                try{
                    Integer x = Integer.valueOf(vMinLengthText.getText());
                    if (x<0){
                        JOptionPane.showMessageDialog(this, "You have to specified a positive value.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                        vMinLengthText.requestFocusInWindow();
                        return;
                    }
                }
                catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "You have to specified a positive value.","Error: Minimum read length",JOptionPane.ERROR_MESSAGE);
                    vMinLengthText.requestFocusInWindow();
                    return;
                }
                if (!MainFrame.org.matcher(vOrganismText.getText()).matches()){
                    JOptionPane.showMessageDialog(this, "The specified organism is not valid.","Error: Organism",JOptionPane.ERROR_MESSAGE);
                    vOrganismText.requestFocusInWindow();
                }
                else{
                    //execute code
                    Runtime rt = Runtime.getRuntime();
                    try{
                        String[] cmd = {"/bin/bash","-c"," bash ./execRNA.sh "};

                        if (vSudoRadioButton.isSelected()){
                            cmd[2]+= "group=\\\"sudo\\\"";
                        }
                        else{
                            cmd[2]+= "group=\\\"docker\\\"";
                        }
                        cmd[2]+= " fastq.folder=\\\""+vFastQFolderText.getText()+"\\\" scratch.folder=\\\""+vOutputFolderText.getText()+"\\\" adapter5=\\\""+vAdapter5Text.getText()+"\\\" adapter3=\\\""+vAdapter3Text.getText()+"\\\"";

                        if (vPeRadioButton.isSelected()){
                            cmd[2]+= " seq.type=\\\"pe\\\"";
                        }
                        else{
                            cmd[2]+= " seq.type=\\\"se\\\"";
                        }
                        cmd[2]+= " threads="+vThreadText.getText()+" min.length="+vMinLengthText.getText()+" genome.folder=\\\""+vGenomeFolderText.getText()+"\\\"";

                        if (vSNoneRadioButton.isSelected())
                        cmd[2]+= " strandness=\\\"none\\\"";
                        else
                        if (vSForwardRadioButton.isSelected())
                        cmd[2]+= " strandness=\\\"forward\\\"";
                        else
                        cmd[2]+= " strandness=\\\"reverse\\\"";

                        cmd[2]+= " annotation.type=\\\"gtfENSEMBL\\\"";

                        if (vBAMyesRadioButton.isSelected())
                        cmd[2]+= " save.bam=TRUE";
                        else
                        cmd[2]+= " save.bam=FALSE";

                        cmd[2]+=" org=\\\""+vOrganismText.getText()+"\\\"";

                        cmd[2]+=" "+vFastQFolderText.getText() +" >& "+vFastQFolderText.getText()+"/outputExecution ";

                        //ProcessStatus.setText(pr.toString());
                        if (MainFrame.listProcRunning.size()<MainFrame.GS.getMaxSizelistProcRunning()){
                            Process pr = rt.exec(cmd);
                            //System.out.println("lanciato "+pr);
                            MainFrame.ElProcRunning tmp= new MainFrame.ElProcRunning("Genes, isoforms counting RSEM ", vFastQFolderText.getText(),pr,MainFrame.listModel.getSize());
                            MainFrame.listProcRunning.add(tmp);
                            java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/running.png");
                            ImageIcon image2 = new ImageIcon(imgURL);
                            MainFrame.GL.setAvoidProcListValueChanged(-1);
                            MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Running]   "+tmp.toString(),"Running",tmp.path, image2 ));
                            MainFrame.GL.setAvoidProcListValueChanged(0);
                            //addElement("RNAseq counting workflow (data input: "+vFastQFolderText.getText()+")            [Runnig]");
                            if(MainFrame.listProcRunning.size()==1){
                                MainFrame.t=new Timer();
                                MainFrame.t.scheduleAtFixedRate(new MainFrame.MyTask(), 5000, 5000);
                            }
                        }

                        else{
                            MainFrame.ElProcWaiting tmp= new MainFrame.ElProcWaiting("Genes, isoforms counting RSEM ",vFastQFolderText.getText(),cmd,MainFrame.listModel.getSize());
                            MainFrame.listProcWaiting.add(tmp);
                            java.net.URL imgURL = getClass().getResource("/pkg4seqgui/images/waiting.png");
                            ImageIcon image2 = new ImageIcon(imgURL);
                            MainFrame.GL.setAvoidProcListValueChanged(-1);
                            MainFrame.listModel.addElement(new MainFrame.ListEntry(" [Waiting]   "+tmp.toString(),"Waiting",tmp.path,image2));
                            MainFrame.GL.setAvoidProcListValueChanged(0);

                        }
                        MainFrame.GL.setAvoidProcListValueChanged(-1);
                        MainFrame.ProcList.setModel(MainFrame.listModel);
                        MainFrame.ProcList.setCellRenderer(new MainFrame.ListEntryCellRenderer());
                        MainFrame.GL.setAvoidProcListValueChanged(0);
                    }
                    catch(IOException e) {
                        JOptionPane.showMessageDialog(this, e.toString(),"Error execution",JOptionPane.ERROR_MESSAGE);
                        System.out.println(e.toString());
                    }
                    JOptionPane.showMessageDialog(this, "Genes, isoforms counting RSEM task was scheduled","Confermation",JOptionPane.INFORMATION_MESSAGE);
                }
                //execute code
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        vDockerRadioButton.setSelected(true);
        vFastQFolderText.setText("");
        vOutputFolderText.setText("");
        vThreadText.setText(Integer.toString(MainFrame.GS.getDefaultThread()));
        vAdapter5Text.setText(MainFrame.GS.getDefaultAdapter5());
        vAdapter3Text.setText(MainFrame.GS.getDefaultAdapter3());
        vSeRadioButton.setSelected(true);
        vMinLengthText.setText("40");
        vGenomeFolderText.setText("");
        vSNoneRadioButton.setSelected(true);
        vOrganismText.setText("hg38");
        vPeRadioButton.setSelected(true);
        vBAMnoLRadioButton.setSelected(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //saveAsMenuItemActionPerformed(evt);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void vFastQFolderTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vFastQFolderTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vFastQFolderTextActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(vFastQFolderText.getText().equals(""))){
            File file =new File(vFastQFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            vFastQFolderText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        vFastQFolderText.setText("");
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed

        JFileChooser openDir = new JFileChooser();
        if (!(vOutputFolderText.getText().equals(""))){
            File file =new File(vOutputFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            vOutputFolderText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed

        vOutputFolderText.setText("");
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        JFileChooser openDir = new JFileChooser();
        if (!(vGenomeFolderText.getText().equals(""))){
            File file =new File(vGenomeFolderText.getText());
            if (file.isDirectory())
            openDir.setCurrentDirectory(file);
        }
        else
        {
            String curDir = MainFrame.getPreferences().get("open-dir", null);
            openDir.setCurrentDirectory(curDir!=null ? new File(curDir) : null);
        }
        openDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openDir.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = openDir.getSelectedFile();
            vGenomeFolderText.setText(String.valueOf(f));
        }
        MainFrame.getPreferences().put("open-dir",openDir.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        vGenomeFolderText.setText("");
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void vDockerRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vDockerRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vDockerRadioButtonActionPerformed

    private void vThreadTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vThreadTextFocusLost
        if (vThreadText.getText().isEmpty())
        return;
        vThreadText.setForeground(Color.black);
        try
        {
            Integer x = Integer.valueOf(vThreadText.getText());
            if (x<=0){
                vThreadText.setForeground(Color.red);
            }
        }
        catch (NumberFormatException e) {
            vThreadText.setForeground(Color.red);
            vThreadText.setText("");
            //  return;
        }
    }//GEN-LAST:event_vThreadTextFocusLost

    private void vThreadTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vThreadTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vThreadTextActionPerformed

    private void vAdapter5TextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vAdapter5TextFocusLost
        // TODO add your handling code here:
        if (vAdapter5Text.getText().isEmpty())
        return;
        vAdapter5Text.setForeground(Color.black);
        if (!MainFrame.adapter.matcher(vAdapter5Text.getText()).matches()){
            vAdapter5Text.setForeground(Color.red);
        }
    }//GEN-LAST:event_vAdapter5TextFocusLost

    private void vAdapter5TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vAdapter5TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vAdapter5TextActionPerformed

    private void vAdapter3TextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vAdapter3TextFocusLost
        // TODO add your handling code here:
        if (vAdapter3Text.getText().isEmpty())
        return;
        vAdapter3Text.setForeground(Color.black);
        if (!MainFrame.adapter.matcher(vAdapter3Text.getText()).matches()){
            vAdapter3Text.setForeground(Color.red);
        }
    }//GEN-LAST:event_vAdapter3TextFocusLost

    private void vAdapter3TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vAdapter3TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vAdapter3TextActionPerformed

    private void vPeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vPeRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vPeRadioButtonActionPerformed

    private void vMinLengthTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vMinLengthTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_vMinLengthTextFocusLost

    private void vMinLengthTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vMinLengthTextActionPerformed
        if (vMinLengthText.getText().isEmpty())
        return;
        vMinLengthText.setForeground(Color.black);
        try
        {
            Integer x = Integer.valueOf(vMinLengthText.getText());
            if (x<=0){
                vMinLengthText.setForeground(Color.red);
            }
        }
        catch (NumberFormatException e) {
            vMinLengthText.setForeground(Color.red);
            vMinLengthText.setText("");
            //return;
        }         // TODO add your handling code here:
    }//GEN-LAST:event_vMinLengthTextActionPerformed

    private void vSNoneRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vSNoneRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vSNoneRadioButtonActionPerformed

    private void vSForwardRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vSForwardRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vSForwardRadioButtonActionPerformed

    private void vSReverseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vSReverseRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vSReverseRadioButtonActionPerformed

    private void vOrganismTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vOrganismTextFocusLost
        // TODO add your handling code here:
        if (vOrganismText.getText().isEmpty())
        return;
        vOrganismText.setForeground(Color.black);
        if (!MainFrame.org.matcher(vOrganismText.getText()).matches()){
            vOrganismText.setForeground(Color.red);
        }
    }//GEN-LAST:event_vOrganismTextFocusLost

    private void vOrganismTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vOrganismTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vOrganismTextActionPerformed

    private void vBAMyesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vBAMyesRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vBAMyesRadioButtonActionPerformed

    private void vBAMnoLRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vBAMnoLRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vBAMnoLRadioButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Annotation;
    private javax.swing.ButtonGroup Strand;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    public static javax.swing.JTextField vAdapter3Text;
    public static javax.swing.JTextField vAdapter5Text;
    public static javax.swing.JRadioButton vBAMnoLRadioButton;
    public static javax.swing.JRadioButton vBAMyesRadioButton;
    private javax.swing.JButton vCloseButton;
    public static javax.swing.JRadioButton vDockerRadioButton;
    private javax.swing.ButtonGroup vExecution;
    public static javax.swing.JTextField vFastQFolderText;
    public static javax.swing.JTextField vGenomeFolderText;
    public static javax.swing.JTextField vMinLengthText;
    public static javax.swing.JTextField vOrganismText;
    public static javax.swing.JTextField vOutputFolderText;
    public static javax.swing.JRadioButton vPeRadioButton;
    public static javax.swing.JRadioButton vSForwardRadioButton;
    public static javax.swing.JRadioButton vSNoneRadioButton;
    public static javax.swing.JRadioButton vSReverseRadioButton;
    public static javax.swing.JRadioButton vSeRadioButton;
    private javax.swing.ButtonGroup vSeq;
    public static javax.swing.JRadioButton vSudoRadioButton;
    public static javax.swing.JTextField vThreadText;
    private javax.swing.JPanel vmRNAPanel;
    // End of variables declaration//GEN-END:variables
}
