/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;

import java.nio.file.Paths;
import javax.swing.JFileChooser;

/**
 *
 * @author Nicola Licheri
 */
public class ChipseqAnnotation extends javax.swing.JPanel {

    /**
     * Creates new form ChipseqAnnotation
     */
    public ChipseqAnnotation() {
        initComponents();
    }
    
    private static final long serialVersionUID = 57744123321L;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        executionGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        executionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sudoButton = new javax.swing.JRadioButton();
        dockerButton = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        paramsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        peaksFileTextField = new javax.swing.JTextField();
        browsePeaks = new javax.swing.JButton();
        cancelPeaks = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        gtfFileTextField = new javax.swing.JTextField();
        browseGTF = new javax.swing.JButton();
        cancelGTF = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        extensionTextField = new javax.swing.JTextField();
        executeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "Gene result annotation using ENSEMBL GTF", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(191, 60, 194))); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        executionPanel.setBackground(new java.awt.Color(248, 248, 248));
        executionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        executionPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Execution: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 188);
        executionPanel.add(jLabel1, gridBagConstraints);

        executionGroup.add(sudoButton);
        sudoButton.setText("sudo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        executionPanel.add(sudoButton, gridBagConstraints);

        executionGroup.add(dockerButton);
        dockerButton.setSelected(true);
        dockerButton.setText("docker");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        executionPanel.add(dockerButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        executionPanel.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(executionPanel, gridBagConstraints);

        paramsPanel.setBackground(new java.awt.Color(248, 248, 248));
        paramsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        paramsPanel.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Peaks file: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(jLabel2, gridBagConstraints);

        peaksFileTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(peaksFileTextField, gridBagConstraints);

        browsePeaks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        browsePeaks.setText("Browse");
        browsePeaks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsePeaksActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(browsePeaks, gridBagConstraints);

        cancelPeaks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        cancelPeaks.setText("Cancel");
        cancelPeaks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPeaksActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(cancelPeaks, gridBagConstraints);

        jLabel3.setText("GTF file: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(jLabel3, gridBagConstraints);

        gtfFileTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(gtfFileTextField, gridBagConstraints);

        browseGTF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        browseGTF.setText("Browse");
        browseGTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseGTFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(browseGTF, gridBagConstraints);

        cancelGTF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        cancelGTF.setText("Cancel");
        cancelGTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelGTFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(cancelGTF, gridBagConstraints);

        jLabel4.setText("nts upstream/downstream target gene:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(jLabel4, gridBagConstraints);

        extensionTextField.setText("10000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        paramsPanel.add(extensionTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(paramsPanel, gridBagConstraints);

        executeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        executeButton.setText("Execute");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(executeButton, gridBagConstraints);

        resetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(resetButton, gridBagConstraints);

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(closeButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void browsePeaksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsePeaksActionPerformed
        MainFrame.browseTextFieldContent(this, peaksFileTextField, JFileChooser.FILES_ONLY);
    }//GEN-LAST:event_browsePeaksActionPerformed

    private void cancelPeaksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPeaksActionPerformed
        peaksFileTextField.setText("");
    }//GEN-LAST:event_cancelPeaksActionPerformed

    private void browseGTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseGTFActionPerformed
        MainFrame.browseTextFieldContent(this, gtfFileTextField, JFileChooser.FILES_ONLY);
    }//GEN-LAST:event_browseGTFActionPerformed

    private void cancelGTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelGTFActionPerformed
        gtfFileTextField.setText("");
    }//GEN-LAST:event_cancelGTFActionPerformed

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        String peaksFile = peaksFileTextField.getText(), 
               gtfFile = gtfFileTextField.getText(); 
        
        if (MainFrame.checkPath(this, peaksFile, "MACS peaks file") || 
            MainFrame.checkPath(this, gtfFile, "genome GTF file"))
                return; 
       
        Integer extension = MainFrame.checkIntValue(this, extensionTextField.getText(), "extension value"); 
        if (extension == null) 
            return; 
       
        String outputFolder = Paths.get(peaksFile).getParent().toString(); 
        ScriptCaller params = new ScriptCaller("chipseqAnnotGTF.R", outputFolder)
                .addArg("group", sudoButton.isSelected() ? "sudo" : "docker")
                .addArg("peaks.file", peaksFile)
                .addArg("gtf.file", gtfFile)
                .addArg("extension", extension);
        MainFrame.execCommand(this, "Chipseq annotation by GTF", params);
    }//GEN-LAST:event_executeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        gtfFileTextField.setText("");
        peaksFileTextField.setText("");
        extensionTextField.setText("10000");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        resetButtonActionPerformed(evt); 
        MainFrame.setCard(null);
    }//GEN-LAST:event_closeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseGTF;
    private javax.swing.JButton browsePeaks;
    private javax.swing.JButton cancelGTF;
    private javax.swing.JButton cancelPeaks;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton dockerButton;
    private javax.swing.JButton executeButton;
    private javax.swing.ButtonGroup executionGroup;
    private javax.swing.JPanel executionPanel;
    private javax.swing.JTextField extensionTextField;
    private javax.swing.JTextField gtfFileTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel paramsPanel;
    private javax.swing.JTextField peaksFileTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JRadioButton sudoButton;
    // End of variables declaration//GEN-END:variables
}
