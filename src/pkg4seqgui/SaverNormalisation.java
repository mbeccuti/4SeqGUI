/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4seqgui;

import java.nio.file.Paths;
import javax.swing.JFileChooser;

/**
 *
 * @author Nicola Licheri
 */
public class SaverNormalisation extends javax.swing.JPanel {

    private static final long serialVersionUID = 77766633339L;
    /**
     * Creates new form SaverNormalisation
     */
    public SaverNormalisation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        SaverPanel = new javax.swing.JPanel();
        executionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sudoRadioButton = new javax.swing.JRadioButton();
        dockerRadioButton = new javax.swing.JRadioButton();
        saverParams = new javax.swing.JPanel();
        clLabel1 = new javax.swing.JLabel();
        inputFileTextField = new javax.swing.JTextField();
        browseIFButton1 = new javax.swing.JButton();
        resetIFButton = new javax.swing.JButton();
        clLabel2 = new javax.swing.JLabel();
        scratchFolderTextField = new javax.swing.JTextField();
        browseSFButton = new javax.swing.JButton();
        resetSFButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        separatorComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        numCoresTextField = new javax.swing.JTextField();
        executeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        SaverPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(30, 1, 1, 1), "SAVER Normalisation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(224, 147, 10))); // NOI18N
        SaverPanel.setLayout(new java.awt.GridBagLayout());

        executionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        executionPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Execution:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        executionPanel.add(jLabel1, gridBagConstraints);

        buttonGroup1.add(sudoRadioButton);
        sudoRadioButton.setText("sudo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 40, 10, 10);
        executionPanel.add(sudoRadioButton, gridBagConstraints);

        buttonGroup1.add(dockerRadioButton);
        dockerRadioButton.setSelected(true);
        dockerRadioButton.setText("docker");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        executionPanel.add(dockerRadioButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        SaverPanel.add(executionPanel, gridBagConstraints);

        saverParams.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        saverParams.setLayout(new java.awt.GridBagLayout());

        clLabel1.setText("Input file:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(clLabel1, gridBagConstraints);

        inputFileTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(inputFileTextField, gridBagConstraints);

        browseIFButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/fileb.png"))); // NOI18N
        browseIFButton1.setText("Browse");
        browseIFButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseIFButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(browseIFButton1, gridBagConstraints);

        resetIFButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        resetIFButton.setText("Cancel");
        resetIFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetIFButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(resetIFButton, gridBagConstraints);

        clLabel2.setText("Scratch folder:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(clLabel2, gridBagConstraints);

        scratchFolderTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(scratchFolderTextField, gridBagConstraints);

        browseSFButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/52b.png"))); // NOI18N
        browseSFButton.setText("Browse");
        browseSFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseSFButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(browseSFButton, gridBagConstraints);

        resetSFButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/33b.png"))); // NOI18N
        resetSFButton.setText("Cancel");
        resetSFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetSFButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(resetSFButton, gridBagConstraints);

        jLabel2.setText("Separator:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(jLabel2, gridBagConstraints);

        separatorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TAB", "COMMA" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(separatorComboBox, gridBagConstraints);

        jLabel3.setText("Num. cores: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(jLabel3, gridBagConstraints);

        numCoresTextField.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        saverParams.add(numCoresTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        SaverPanel.add(saverParams, gridBagConstraints);

        executeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/exec.png"))); // NOI18N
        executeButton.setText("Execute");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        SaverPanel.add(executeButton, gridBagConstraints);

        resetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/reset.png"))); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        SaverPanel.add(resetButton, gridBagConstraints);

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg4seqgui/images/close.png"))); // NOI18N
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        SaverPanel.add(closeButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(SaverPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void browseIFButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseIFButton1ActionPerformed
        MainFrame.browseTextFieldContent(this, inputFileTextField, JFileChooser.FILES_ONLY);
    }//GEN-LAST:event_browseIFButton1ActionPerformed

    private void resetIFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetIFButtonActionPerformed
        inputFileTextField.setText("");
    }//GEN-LAST:event_resetIFButtonActionPerformed

    private void browseSFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseSFButtonActionPerformed
        MainFrame.browseTextFieldContent(this, scratchFolderTextField, JFileChooser.DIRECTORIES_ONLY);
    }//GEN-LAST:event_browseSFButtonActionPerformed

    private void resetSFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetSFButtonActionPerformed
        scratchFolderTextField.setText("");
    }//GEN-LAST:event_resetSFButtonActionPerformed

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        String inputFile = inputFileTextField.getText(),
               scratchFolder = scratchFolderTextField.getText();
        String separator = separatorComboBox.getSelectedItem().toString();
        Integer ncores; 

        if (MainFrame.checkPath(this, inputFile, "input file") ||
            MainFrame.checkPath(this, scratchFolder, "scratch folder")) 
            return;
       
        if ((ncores = MainFrame.checkIntValue(this, numCoresTextField.getText(), "number of cores")) == null)
            return; 

        String outputFolder = Paths.get(inputFile).getParent().toString();
        ScriptCaller params = new ScriptCaller("SaverNormalisation.R", outputFolder)
            .addArg("group", sudoRadioButton.isSelected() ? "sudo" : "docker")
            .addArg("scratch.folder", scratchFolder)
            .addArg("file", inputFile)
            .addArg("separator", separator)
            .addArg("ncores", ncores);
        MainFrame.execCommand(this, "Saver Normalisation", params);
    }//GEN-LAST:event_executeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        dockerRadioButton.setSelected(true);
        inputFileTextField.setText("");
        scratchFolderTextField.setText("");
        numCoresTextField.setText("1");
        separatorComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_resetButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        resetButtonActionPerformed(evt);
        MainFrame.setCard(null);
    }//GEN-LAST:event_closeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SaverPanel;
    private javax.swing.JButton browseIFButton1;
    private javax.swing.JButton browseSFButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel clLabel1;
    private javax.swing.JLabel clLabel2;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton dockerRadioButton;
    private javax.swing.JButton executeButton;
    private javax.swing.JPanel executionPanel;
    private javax.swing.JTextField inputFileTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField numCoresTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton resetIFButton;
    private javax.swing.JButton resetSFButton;
    private javax.swing.JPanel saverParams;
    private javax.swing.JTextField scratchFolderTextField;
    private javax.swing.JComboBox<String> separatorComboBox;
    private javax.swing.JRadioButton sudoRadioButton;
    // End of variables declaration//GEN-END:variables
}
